name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'apps/www/**'
  pull_request:
    branches:
      - main
      - dev
    paths:
      - 'apps/www/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: pnpm

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./

      - name: Build registry
        run: pnpm run build:registry
        working-directory: ./apps/www
        continue-on-error: true

      - name: Type check
        run: pnpm run typecheck
        working-directory: ./apps/www
        continue-on-error: true

      - name: Build VitePress
        run: pnpm run build
        working-directory: ./apps/www
        env:
          NODE_ENV: production
          VITE_APP_ENV: production

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: shadcn-vue-www
          directory: ./apps/www/.vitepress/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

      - name: Add deployment comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployment } = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              per_page: 1
            });

            if (deployment.length > 0) {
              const deploymentUrl = deployment[0].payload?.web_url || 'Deployment URL not available';

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `🚀 **Deployment Preview**\n\n✅ Deploy successful!\n\n🔗 **Preview URL**: ${deploymentUrl}\n\n📝 Built from commit: ${context.sha.substring(0, 7)}`
              });
            }
