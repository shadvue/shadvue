{
  "name": "resizable",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui/resizable/index.ts",
      "content": "export { default as ResizableHandle } from \"./ResizableHandle.vue\"\r\nexport { default as ResizablePanel } from \"./ResizablePanel.vue\"\r\nexport { default as ResizablePanelGroup } from \"./ResizablePanelGroup.vue\"\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/resizable/ResizableHandle.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SplitterResizeHandleEmits, SplitterResizeHandleProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { GripVertical } from \"lucide-vue-next\"\r\nimport { SplitterResizeHandle, useForwardPropsEmits } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<SplitterResizeHandleProps & { class?: HTMLAttributes[\"class\"], withHandle?: boolean }>()\r\nconst emits = defineEmits<SplitterResizeHandleEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\", \"withHandle\")\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <SplitterResizeHandle\r\n    data-slot=\"resizable-handle\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn('bg-border focus-visible:ring-ring relative flex w-px items-center justify-center after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:ring-1 focus-visible:ring-offset-1 focus-visible:outline-hidden data-[orientation=vertical]:h-px data-[orientation=vertical]:w-full data-[orientation=vertical]:after:left-0 data-[orientation=vertical]:after:h-1 data-[orientation=vertical]:after:w-full data-[orientation=vertical]:after:-translate-y-1/2 data-[orientation=vertical]:after:translate-x-0 [&[data-orientation=vertical]>div]:rotate-90', props.class)\"\r\n  >\r\n    <template v-if=\"props.withHandle\">\r\n      <div class=\"bg-border z-10 flex h-4 w-3 items-center justify-center rounded-xs border\">\r\n        <GripVertical class=\"size-2.5\" />\r\n      </div>\r\n    </template>\r\n  </SplitterResizeHandle>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/resizable/ResizablePanel.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SplitterPanelEmits, SplitterPanelProps } from \"reka-ui\"\r\nimport { SplitterPanel, useForwardPropsEmits } from \"reka-ui\"\r\n\r\nconst props = defineProps<SplitterPanelProps>()\r\nconst emits = defineEmits<SplitterPanelEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <SplitterPanel\r\n    data-slot=\"resizable-panel\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <slot />\r\n  </SplitterPanel>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/resizable/ResizablePanelGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SplitterGroupEmits, SplitterGroupProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { SplitterGroup, useForwardPropsEmits } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<SplitterGroupProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<SplitterGroupEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <SplitterGroup\r\n    data-slot=\"resizable-panel-group\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn('flex h-full w-full data-[orientation=vertical]:flex-col', props.class)\"\r\n  >\r\n    <slot />\r\n  </SplitterGroup>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
