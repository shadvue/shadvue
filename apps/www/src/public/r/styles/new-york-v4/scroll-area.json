{
  "name": "scroll-area",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui/scroll-area/index.ts",
      "content": "export { default as ScrollArea } from \"./ScrollArea.vue\"\r\nexport { default as ScrollBar } from \"./ScrollBar.vue\"\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/scroll-area/ScrollArea.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ScrollAreaRootProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport {\r\n  ScrollAreaCorner,\r\n  ScrollAreaRoot,\r\n\r\n  ScrollAreaViewport,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport ScrollBar from \"./ScrollBar.vue\"\r\n\r\nconst props = defineProps<ScrollAreaRootProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <ScrollAreaRoot\r\n    data-slot=\"scroll-area\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('relative', props.class)\"\r\n  >\r\n    <ScrollAreaViewport\r\n      data-slot=\"scroll-area-viewport\"\r\n      class=\"focus-visible:ring-ring/50 size-full rounded-[inherit] transition-[color,box-shadow] outline-none focus-visible:ring-[3px] focus-visible:outline-1\"\r\n    >\r\n      <slot />\r\n    </ScrollAreaViewport>\r\n    <ScrollBar />\r\n    <ScrollAreaCorner />\r\n  </ScrollAreaRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/scroll-area/ScrollBar.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ScrollAreaScrollbarProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ScrollAreaScrollbar, ScrollAreaThumb } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = withDefaults(defineProps<ScrollAreaScrollbarProps & { class?: HTMLAttributes[\"class\"] }>(), {\r\n  orientation: \"vertical\",\r\n})\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <ScrollAreaScrollbar\r\n    data-slot=\"scroll-area-scrollbar\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"\r\n      cn('flex touch-none p-px transition-colors select-none',\r\n         orientation === 'vertical'\r\n           && 'h-full w-2.5 border-l border-l-transparent',\r\n         orientation === 'horizontal'\r\n           && 'h-2.5 flex-col border-t border-t-transparent',\r\n         props.class)\"\r\n  >\r\n    <ScrollAreaThumb\r\n      data-slot=\"scroll-area-thumb\"\r\n      class=\"bg-border relative flex-1 rounded-full\"\r\n    />\r\n  </ScrollAreaScrollbar>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
