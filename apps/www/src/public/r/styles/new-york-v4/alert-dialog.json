{
  "name": "alert-dialog",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "ui/alert-dialog/AlertDialog.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { AlertDialogEmits, AlertDialogProps } from \"reka-ui\"\nimport { AlertDialogRoot, useForwardPropsEmits } from \"reka-ui\"\r\n\r\nconst props = defineProps<AlertDialogProps>()\r\nconst emits = defineEmits<AlertDialogEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <AlertDialogRoot data-slot=\"alert-dialog\" v-bind=\"forwarded\">\r\n    <slot />\r\n  </AlertDialogRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/alert-dialog/AlertDialogAction.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { AlertDialogActionProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { AlertDialogAction } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/new-york/ui/button\"\r\n\r\nconst props = defineProps<AlertDialogActionProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <AlertDialogAction v-bind=\"delegatedProps\" :class=\"cn(buttonVariants(), props.class)\">\r\n    <slot />\r\n  </AlertDialogAction>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/alert-dialog/AlertDialogCancel.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { AlertDialogCancelProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { AlertDialogCancel } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/new-york/ui/button\"\r\n\r\nconst props = defineProps<AlertDialogCancelProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <AlertDialogCancel\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn(\r\n      buttonVariants({ variant: 'outline' }),\r\n      'mt-2 sm:mt-0',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n  </AlertDialogCancel>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/alert-dialog/AlertDialogContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { AlertDialogContentEmits, AlertDialogContentProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport {\r\n  AlertDialogContent,\r\n\r\n  AlertDialogOverlay,\r\n  AlertDialogPortal,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<AlertDialogContentProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<AlertDialogContentEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <AlertDialogPortal>\r\n    <AlertDialogOverlay\r\n      data-slot=\"alert-dialog-overlay\"\r\n      class=\"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80\"\r\n    />\r\n    <AlertDialogContent\r\n      data-slot=\"alert-dialog-content\"\r\n      v-bind=\"forwarded\"\r\n      :class=\"\r\n        cn(\r\n          'bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg',\r\n          props.class,\r\n        )\r\n      \"\r\n    >\r\n      <slot />\r\n    </AlertDialogContent>\r\n  </AlertDialogPortal>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/alert-dialog/AlertDialogDescription.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { AlertDialogDescriptionProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport {\r\n  AlertDialogDescription,\r\n\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<AlertDialogDescriptionProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <AlertDialogDescription\r\n    data-slot=\"alert-dialog-description\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('text-muted-foreground text-sm', props.class)\"\r\n  >\r\n    <slot />\r\n  </AlertDialogDescription>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/alert-dialog/AlertDialogFooter.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    data-slot=\"alert-dialog-footer\"\r\n    :class=\"\r\n      cn(\r\n        'flex flex-col-reverse gap-2 sm:flex-row sm:justify-end',\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/alert-dialog/AlertDialogHeader.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    data-slot=\"alert-dialog-header\"\r\n    :class=\"cn('flex flex-col gap-2 text-center sm:text-left', props.class)\"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/alert-dialog/AlertDialogTitle.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { AlertDialogTitleProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { AlertDialogTitle } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<AlertDialogTitleProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <AlertDialogTitle\r\n    data-slot=\"alert-dialog-title\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('text-lg font-semibold', props.class)\"\r\n  >\r\n    <slot />\r\n  </AlertDialogTitle>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/alert-dialog/AlertDialogTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { AlertDialogTriggerProps } from \"reka-ui\"\nimport { AlertDialogTrigger } from \"reka-ui\"\r\n\r\nconst props = defineProps<AlertDialogTriggerProps>()\r\n</script>\r\n\r\n<template>\r\n  <AlertDialogTrigger data-slot=\"alert-dialog-trigger\" v-bind=\"props\">\r\n    <slot />\r\n  </AlertDialogTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/alert-dialog/index.ts",
      "content": "export { default as AlertDialog } from \"./AlertDialog.vue\"\r\nexport { default as AlertDialogAction } from \"./AlertDialogAction.vue\"\r\nexport { default as AlertDialogCancel } from \"./AlertDialogCancel.vue\"\r\nexport { default as AlertDialogContent } from \"./AlertDialogContent.vue\"\r\nexport { default as AlertDialogDescription } from \"./AlertDialogDescription.vue\"\r\nexport { default as AlertDialogFooter } from \"./AlertDialogFooter.vue\"\r\nexport { default as AlertDialogHeader } from \"./AlertDialogHeader.vue\"\r\nexport { default as AlertDialogTitle } from \"./AlertDialogTitle.vue\"\r\nexport { default as AlertDialogTrigger } from \"./AlertDialogTrigger.vue\"\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
