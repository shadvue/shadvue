{
  "name": "select",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui/select/index.ts",
      "content": "export { default as Select } from \"./Select.vue\"\r\nexport { default as SelectContent } from \"./SelectContent.vue\"\r\nexport { default as SelectGroup } from \"./SelectGroup.vue\"\r\nexport { default as SelectItem } from \"./SelectItem.vue\"\r\nexport { default as SelectItemText } from \"./SelectItemText.vue\"\r\nexport { default as SelectLabel } from \"./SelectLabel.vue\"\r\nexport { default as SelectScrollDownButton } from \"./SelectScrollDownButton.vue\"\r\nexport { default as SelectScrollUpButton } from \"./SelectScrollUpButton.vue\"\r\nexport { default as SelectSeparator } from \"./SelectSeparator.vue\"\r\nexport { default as SelectTrigger } from \"./SelectTrigger.vue\"\r\nexport { default as SelectValue } from \"./SelectValue.vue\"\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/select/Select.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SelectRootEmits, SelectRootProps } from \"reka-ui\"\r\nimport { SelectRoot, useForwardPropsEmits } from \"reka-ui\"\r\n\r\nconst props = defineProps<SelectRootProps>()\r\nconst emits = defineEmits<SelectRootEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <SelectRoot\r\n    data-slot=\"select\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <slot />\r\n  </SelectRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/select/SelectContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SelectContentEmits, SelectContentProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport {\r\n  SelectContent,\r\n\r\n  SelectPortal,\r\n  SelectViewport,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { SelectScrollDownButton, SelectScrollUpButton } from \".\"\r\n\r\ndefineOptions({\r\n  inheritAttrs: false,\r\n})\r\n\r\nconst props = withDefaults(\r\n  defineProps<SelectContentProps & { class?: HTMLAttributes[\"class\"] }>(),\r\n  {\r\n    position: \"popper\",\r\n  },\r\n)\r\nconst emits = defineEmits<SelectContentEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <SelectPortal>\r\n    <SelectContent\r\n      data-slot=\"select-content\"\r\n      v-bind=\"{ ...forwarded, ...$attrs }\"\r\n      :class=\"cn(\r\n        'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--reka-select-content-available-height) min-w-[8rem] overflow-x-hidden overflow-y-auto rounded-md border shadow-md',\r\n        position === 'popper'\r\n          && 'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\r\n        props.class,\r\n      )\r\n      \"\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectViewport :class=\"cn('p-1', position === 'popper' && 'h-[var(--reka-select-trigger-height)] w-full min-w-[var(--reka-select-trigger-width)] scroll-my-1')\">\r\n        <slot />\r\n      </SelectViewport>\r\n      <SelectScrollDownButton />\r\n    </SelectContent>\r\n  </SelectPortal>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/select/SelectGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SelectGroupProps } from \"reka-ui\"\nimport { SelectGroup } from \"reka-ui\"\r\n\r\nconst props = defineProps<SelectGroupProps>()\r\n</script>\r\n\r\n<template>\r\n  <SelectGroup\r\n    data-slot=\"select-group\"\r\n    v-bind=\"props\"\r\n  >\r\n    <slot />\r\n  </SelectGroup>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/select/SelectItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SelectItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { Check } from \"lucide-vue-next\"\nimport {\r\n  SelectItem,\r\n  SelectItemIndicator,\r\n\r\n  SelectItemText,\r\n  useForwardProps,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<SelectItemProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <SelectItem\r\n    data-slot=\"select-item\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"\r\n      cn(\r\n        `focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2`,\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <span class=\"absolute right-2 flex size-3.5 items-center justify-center\">\r\n      <SelectItemIndicator>\r\n        <Check class=\"size-4\" />\r\n      </SelectItemIndicator>\r\n    </span>\r\n\r\n    <SelectItemText>\r\n      <slot />\r\n    </SelectItemText>\r\n  </SelectItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/select/SelectItemText.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SelectItemTextProps } from \"reka-ui\"\nimport { SelectItemText } from \"reka-ui\"\r\n\r\nconst props = defineProps<SelectItemTextProps>()\r\n</script>\r\n\r\n<template>\r\n  <SelectItemText\r\n    data-slot=\"select-item-text\"\r\n    v-bind=\"props\"\r\n  >\r\n    <slot />\r\n  </SelectItemText>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/select/SelectLabel.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SelectLabelProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\nimport { SelectLabel } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<SelectLabelProps & { class?: HTMLAttributes[\"class\"] }>()\r\n</script>\r\n\r\n<template>\r\n  <SelectLabel\r\n    data-slot=\"select-label\"\r\n    :class=\"cn('px-2 py-1.5 text-sm font-medium', props.class)\"\r\n  >\r\n    <slot />\r\n  </SelectLabel>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/select/SelectScrollDownButton.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SelectScrollDownButtonProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronDown } from \"lucide-vue-next\"\nimport { SelectScrollDownButton, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<SelectScrollDownButtonProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <SelectScrollDownButton\r\n    data-slot=\"select-scroll-down-button\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn('flex cursor-default items-center justify-center py-1', props.class)\"\r\n  >\r\n    <slot>\r\n      <ChevronDown class=\"size-4\" />\r\n    </slot>\r\n  </SelectScrollDownButton>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/select/SelectScrollUpButton.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SelectScrollUpButtonProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronUp } from \"lucide-vue-next\"\nimport { SelectScrollUpButton, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<SelectScrollUpButtonProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <SelectScrollUpButton\r\n    data-slot=\"select-scroll-up-button\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn('flex cursor-default items-center justify-center py-1', props.class)\"\r\n  >\r\n    <slot>\r\n      <ChevronUp class=\"size-4\" />\r\n    </slot>\r\n  </SelectScrollUpButton>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/select/SelectSeparator.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SelectSeparatorProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { SelectSeparator } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<SelectSeparatorProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <SelectSeparator\r\n    data-slot=\"select-separator\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('bg-border pointer-events-none -mx-1 my-1 h-px', props.class)\"\r\n  />\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/select/SelectTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SelectTriggerProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronDown } from \"lucide-vue-next\"\nimport { SelectIcon, SelectTrigger, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = withDefaults(\r\n  defineProps<SelectTriggerProps & { class?: HTMLAttributes[\"class\"], size?: \"sm\" | \"default\" }>(),\r\n  { size: \"default\" },\r\n)\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\", \"size\")\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <SelectTrigger\r\n    data-slot=\"select-trigger\"\r\n    :data-size=\"size\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn(\r\n      `border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n    <SelectIcon as-child>\r\n      <ChevronDown class=\"size-4 opacity-50\" />\r\n    </SelectIcon>\r\n  </SelectTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/select/SelectValue.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SelectValueProps } from \"reka-ui\"\nimport { SelectValue } from \"reka-ui\"\r\n\r\nconst props = defineProps<SelectValueProps>()\r\n</script>\r\n\r\n<template>\r\n  <SelectValue\r\n    data-slot=\"select-value\"\r\n    v-bind=\"props\"\r\n  >\r\n    <slot />\r\n  </SelectValue>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
