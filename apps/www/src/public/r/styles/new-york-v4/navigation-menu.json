{
  "name": "navigation-menu",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui/navigation-menu/index.ts",
      "content": "import { cva } from \"class-variance-authority\"\r\n\r\nexport { default as NavigationMenu } from \"./NavigationMenu.vue\"\r\nexport { default as NavigationMenuContent } from \"./NavigationMenuContent.vue\"\r\nexport { default as NavigationMenuIndicator } from \"./NavigationMenuIndicator.vue\"\r\nexport { default as NavigationMenuItem } from \"./NavigationMenuItem.vue\"\r\nexport { default as NavigationMenuLink } from \"./NavigationMenuLink.vue\"\r\nexport { default as NavigationMenuList } from \"./NavigationMenuList.vue\"\r\nexport { default as NavigationMenuTrigger } from \"./NavigationMenuTrigger.vue\"\r\nexport { default as NavigationMenuViewport } from \"./NavigationMenuViewport.vue\"\r\n\r\nexport const navigationMenuTriggerStyle = cva(\r\n  \"group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground disabled:pointer-events-none disabled:opacity-50 data-[state=open]:hover:bg-accent data-[state=open]:text-accent-foreground data-[state=open]:focus:bg-accent data-[state=open]:bg-accent/50 focus-visible:ring-ring/50 outline-none transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1\",\r\n)\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/navigation-menu/NavigationMenu.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { NavigationMenuRootEmits, NavigationMenuRootProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport {\r\n  NavigationMenuRoot,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport NavigationMenuViewport from \"./NavigationMenuViewport.vue\"\r\n\r\nconst props = withDefaults(defineProps<NavigationMenuRootProps & {\r\n  class?: HTMLAttributes[\"class\"]\r\n  viewport?: boolean\r\n}>(), {\r\n  viewport: true,\r\n})\r\nconst emits = defineEmits<NavigationMenuRootEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\", \"viewport\")\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <NavigationMenuRoot\r\n    data-slot=\"navigation-menu\"\r\n    :data-viewport=\"viewport\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn('group/navigation-menu relative flex max-w-max flex-1 items-center justify-center', props.class)\"\r\n  >\r\n    <slot />\r\n    <NavigationMenuViewport v-if=\"viewport\" />\r\n  </NavigationMenuRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/navigation-menu/NavigationMenuContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { NavigationMenuContentEmits, NavigationMenuContentProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport {\r\n  NavigationMenuContent,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<NavigationMenuContentProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<NavigationMenuContentEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <NavigationMenuContent\r\n    data-slot=\"navigation-menu-content\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn(\r\n      `data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 top-0 left-0 w-full p-2 pr-2.5 md:absolute md:w-auto`,\r\n      `group-data-[viewport=false]/navigation-menu:bg-popover group-data-[viewport=false]/navigation-menu:text-popover-foreground group-data-[viewport=false]/navigation-menu:data-[state=open]:animate-in group-data-[viewport=false]/navigation-menu:data-[state=closed]:animate-out group-data-[viewport=false]/navigation-menu:data-[state=closed]:zoom-out-95 group-data-[viewport=false]/navigation-menu:data-[state=open]:zoom-in-95 group-data-[viewport=false]/navigation-menu:data-[state=open]:fade-in-0 group-data-[viewport=false]/navigation-menu:data-[state=closed]:fade-out-0 group-data-[viewport=false]/navigation-menu:top-full group-data-[viewport=false]/navigation-menu:mt-1.5 group-data-[viewport=false]/navigation-menu:overflow-hidden group-data-[viewport=false]/navigation-menu:rounded-md group-data-[viewport=false]/navigation-menu:border group-data-[viewport=false]/navigation-menu:shadow group-data-[viewport=false]/navigation-menu:duration-200 **:data-[slot=navigation-menu-link]:focus:ring-0 **:data-[slot=navigation-menu-link]:focus:outline-none`,\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n  </NavigationMenuContent>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/navigation-menu/NavigationMenuIndicator.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { NavigationMenuIndicatorProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { NavigationMenuIndicator, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<NavigationMenuIndicatorProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <NavigationMenuIndicator\r\n    data-slot=\"navigation-menu-indicator\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn('data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden', props.class)\"\r\n  >\r\n    <div class=\"bg-border relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm shadow-md\" />\r\n  </NavigationMenuIndicator>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/navigation-menu/NavigationMenuItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { NavigationMenuItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { NavigationMenuItem } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<NavigationMenuItemProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <NavigationMenuItem\r\n    data-slot=\"navigation-menu-item\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('relative', props.class)\"\r\n  >\r\n    <slot />\r\n  </NavigationMenuItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/navigation-menu/NavigationMenuLink.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { NavigationMenuLinkEmits, NavigationMenuLinkProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport {\r\n  NavigationMenuLink,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<NavigationMenuLinkProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<NavigationMenuLinkEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <NavigationMenuLink\r\n    data-slot=\"navigation-menu-link\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn(`'data-[active=true]:focus:bg-accent data-[active=true]:hover:bg-accent data-[active=true]:bg-accent/50 data-[active=true]:text-accent-foreground hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 [&_svg:not([class*='text-'])]:text-muted-foreground flex flex-col gap-1 rounded-sm p-2 text-sm transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1 [&_svg:not([class*='size-'])]:size-4'`, props.class)\"\r\n  >\r\n    <slot />\r\n  </NavigationMenuLink>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/navigation-menu/NavigationMenuList.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { NavigationMenuListProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { NavigationMenuList, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<NavigationMenuListProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <NavigationMenuList\r\n    data-slot=\"navigation-menu-list\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"\r\n      cn(\r\n        'group flex flex-1 list-none items-center justify-center gap-1',\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <slot />\r\n  </NavigationMenuList>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/navigation-menu/NavigationMenuTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { NavigationMenuTriggerProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronDown } from \"lucide-vue-next\"\r\nimport {\r\n  NavigationMenuTrigger,\r\n\r\n  useForwardProps,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { navigationMenuTriggerStyle } from \".\"\r\n\r\nconst props = defineProps<NavigationMenuTriggerProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <NavigationMenuTrigger\r\n    data-slot=\"navigation-menu-trigger\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn(navigationMenuTriggerStyle(), 'group', props.class)\"\r\n  >\r\n    <slot />\r\n    <ChevronDown\r\n      class=\"relative top-[1px] ml-1 size-3 transition duration-300 group-data-[state=open]:rotate-180\"\r\n      aria-hidden=\"true\"\r\n    />\r\n  </NavigationMenuTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/navigation-menu/NavigationMenuViewport.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { NavigationMenuViewportProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport {\r\n  NavigationMenuViewport,\r\n\r\n  useForwardProps,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<NavigationMenuViewportProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <div class=\"absolute top-full left-0 isolate z-50 flex justify-center\">\r\n    <NavigationMenuViewport\r\n      data-slot=\"navigation-menu-viewport\"\r\n      v-bind=\"forwardedProps\"\r\n      :class=\"\r\n        cn(\r\n          'origin-top-center bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 relative mt-1.5 h-[var(--reka-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border shadow md:w-[var(--reka-navigation-menu-viewport-width)]',\r\n          props.class,\r\n        )\r\n      \"\r\n    />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
