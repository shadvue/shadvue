{
  "name": "context-menu",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui/context-menu/ContextMenu.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuRootEmits, ContextMenuRootProps } from \"reka-ui\"\r\nimport { ContextMenuRoot, useForwardPropsEmits } from \"reka-ui\"\r\n\r\nconst props = defineProps<ContextMenuRootProps>()\r\nconst emits = defineEmits<ContextMenuRootEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuRoot\r\n    data-slot=\"context-menu\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <slot />\r\n  </ContextMenuRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuCheckboxItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuCheckboxItemEmits, ContextMenuCheckboxItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { Check } from \"lucide-vue-next\"\nimport {\r\n  ContextMenuCheckboxItem,\r\n\r\n  ContextMenuItemIndicator,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ContextMenuCheckboxItemProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<ContextMenuCheckboxItemEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuCheckboxItem\r\n    data-slot=\"context-menu-checkbox-item\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn(\r\n      `focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,\r\n      props.class,\r\n    )\"\r\n  >\r\n    <span class=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\r\n      <ContextMenuItemIndicator>\r\n        <Check class=\"size-4\" />\r\n      </ContextMenuItemIndicator>\r\n    </span>\r\n    <slot />\r\n  </ContextMenuCheckboxItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuContentEmits, ContextMenuContentProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport {\r\n  ContextMenuContent,\r\n\r\n  ContextMenuPortal,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ContextMenuContentProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<ContextMenuContentEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuPortal>\r\n    <ContextMenuContent\r\n      data-slot=\"context-menu-content\"\r\n      v-bind=\"forwarded\"\r\n      :class=\"cn(\r\n        'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--reka-context-menu-content-available-height) min-w-[8rem] overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md',\r\n        props.class,\r\n      )\"\r\n    >\r\n      <slot />\r\n    </ContextMenuContent>\r\n  </ContextMenuPortal>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuGroupProps } from \"reka-ui\"\nimport { ContextMenuGroup } from \"reka-ui\"\r\n\r\nconst props = defineProps<ContextMenuGroupProps>()\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuGroup\r\n    data-slot=\"context-menu-group\"\r\n    v-bind=\"props\"\r\n  >\r\n    <slot />\r\n  </ContextMenuGroup>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuItemEmits, ContextMenuItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport {\r\n  ContextMenuItem,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = withDefaults(defineProps<ContextMenuItemProps & {\r\n  class?: HTMLAttributes[\"class\"]\r\n  inset?: boolean\r\n  variant?: \"default\" | \"destructive\"\r\n}>(), {\r\n  variant: \"default\",\r\n})\r\nconst emits = defineEmits<ContextMenuItemEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuItem\r\n    data-slot=\"context-menu-item\"\r\n    :data-inset=\"inset ? '' : undefined\"\r\n    :data-variant=\"variant\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn(\r\n      `focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive-foreground data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/40 data-[variant=destructive]:focus:text-destructive-foreground data-[variant=destructive]:*:[svg]:!text-destructive-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n  </ContextMenuItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuLabel.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuLabelProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { ContextMenuLabel } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ContextMenuLabelProps & { class?: HTMLAttributes[\"class\"], inset?: boolean }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuLabel\r\n    data-slot=\"context-menu-label\"\r\n    :data-inset=\"inset ? '' : undefined\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('text-foreground px-2 py-1.5 text-sm font-medium data-[inset]:pl-8', props.class)\"\r\n  >\r\n    <slot />\r\n  </ContextMenuLabel>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuPortal.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuPortalProps } from \"reka-ui\"\nimport { ContextMenuPortal } from \"reka-ui\"\r\n\r\nconst props = defineProps<ContextMenuPortalProps>()\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuPortal\r\n    data-slot=\"context-menu-portal\"\r\n    v-bind=\"props\"\r\n  >\r\n    <slot />\r\n  </ContextMenuPortal>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuRadioGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuRadioGroupEmits, ContextMenuRadioGroupProps } from \"reka-ui\"\nimport {\r\n  ContextMenuRadioGroup,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\n\r\nconst props = defineProps<ContextMenuRadioGroupProps>()\r\nconst emits = defineEmits<ContextMenuRadioGroupEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuRadioGroup\r\n    data-slot=\"context-menu-radio-group\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <slot />\r\n  </ContextMenuRadioGroup>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuRadioItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuRadioItemEmits, ContextMenuRadioItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { Circle } from \"lucide-vue-next\"\nimport {\r\n  ContextMenuItemIndicator,\r\n  ContextMenuRadioItem,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ContextMenuRadioItemProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<ContextMenuRadioItemEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuRadioItem\r\n    data-slot=\"context-menu-radio-item\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn(\r\n      `focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,\r\n      props.class,\r\n    )\"\r\n  >\r\n    <span class=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\r\n      <ContextMenuItemIndicator>\r\n        <Circle class=\"size-2 fill-current\" />\r\n      </ContextMenuItemIndicator>\r\n    </span>\r\n    <slot />\r\n  </ContextMenuRadioItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuSeparator.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuSeparatorProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport {\r\n  ContextMenuSeparator,\r\n\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ContextMenuSeparatorProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuSeparator\r\n    data-slot=\"context-menu-separator\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('bg-border -mx-1 my-1 h-px', props.class)\"\r\n  />\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuShortcut.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <span\r\n    data-slot=\"context-menu-shortcut\"\r\n    :class=\"cn('text-muted-foreground ml-auto text-xs tracking-widest', props.class)\"\r\n  >\r\n    <slot />\r\n  </span>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuSub.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuSubEmits, ContextMenuSubProps } from \"reka-ui\"\nimport {\r\n  ContextMenuSub,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\n\r\nconst props = defineProps<ContextMenuSubProps>()\r\nconst emits = defineEmits<ContextMenuSubEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuSub\r\n    data-slot=\"context-menu-sub\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <slot />\r\n  </ContextMenuSub>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuSubContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuSubContentEmits, DropdownMenuSubContentProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport {\r\n  ContextMenuSubContent,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<DropdownMenuSubContentProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<DropdownMenuSubContentEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuSubContent\r\n    data-slot=\"context-menu-sub-content\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"\r\n      cn(\r\n        'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--reka-context-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg',\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <slot />\r\n  </ContextMenuSubContent>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuSubTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuSubTriggerProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronRight } from \"lucide-vue-next\"\nimport {\r\n  ContextMenuSubTrigger,\r\n\r\n  useForwardProps,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ContextMenuSubTriggerProps & { class?: HTMLAttributes[\"class\"], inset?: boolean }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuSubTrigger\r\n    data-slot=\"context-menu-sub-trigger\"\r\n    :data-inset=\"inset ? '' : undefined\"\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn(\r\n      `focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4`,\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n    <ChevronRight class=\"ml-auto\" />\r\n  </ContextMenuSubTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/ContextMenuTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ContextMenuTriggerProps } from \"reka-ui\"\nimport { ContextMenuTrigger, useForwardProps } from \"reka-ui\"\r\n\r\nconst props = defineProps<ContextMenuTriggerProps>()\r\n\r\nconst forwardedProps = useForwardProps(props)\r\n</script>\r\n\r\n<template>\r\n  <ContextMenuTrigger\r\n    data-slot=\"context-menu-trigger\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot />\r\n  </ContextMenuTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/context-menu/index.ts",
      "content": "export { default as ContextMenu } from \"./ContextMenu.vue\"\r\nexport { default as ContextMenuCheckboxItem } from \"./ContextMenuCheckboxItem.vue\"\r\nexport { default as ContextMenuContent } from \"./ContextMenuContent.vue\"\r\nexport { default as ContextMenuGroup } from \"./ContextMenuGroup.vue\"\r\nexport { default as ContextMenuItem } from \"./ContextMenuItem.vue\"\r\nexport { default as ContextMenuLabel } from \"./ContextMenuLabel.vue\"\r\nexport { default as ContextMenuRadioGroup } from \"./ContextMenuRadioGroup.vue\"\r\nexport { default as ContextMenuRadioItem } from \"./ContextMenuRadioItem.vue\"\r\nexport { default as ContextMenuSeparator } from \"./ContextMenuSeparator.vue\"\r\nexport { default as ContextMenuShortcut } from \"./ContextMenuShortcut.vue\"\r\nexport { default as ContextMenuSub } from \"./ContextMenuSub.vue\"\r\nexport { default as ContextMenuSubContent } from \"./ContextMenuSubContent.vue\"\r\nexport { default as ContextMenuSubTrigger } from \"./ContextMenuSubTrigger.vue\"\r\nexport { default as ContextMenuTrigger } from \"./ContextMenuTrigger.vue\"\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
