{
  "name": "TagsInputComboboxDemo",
  "type": "registry:example",
  "dependencies": [
    "reka-ui"
  ],
  "registryDependencies": [
    "combobox",
    "tags-input"
  ],
  "files": [
    {
      "path": "examples/TagsInputComboboxDemo.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { useFilter } from \"reka-ui\"\r\nimport { computed, ref } from \"vue\"\r\nimport { Combobox, ComboboxAnchor, ComboboxEmpty, ComboboxGroup, ComboboxInput, ComboboxItem, ComboboxList } from \"@/registry/new-york/ui/combobox\"\r\nimport { TagsInput, TagsInputInput, TagsInputItem, TagsInputItemDelete, TagsInputItemText } from \"@/registry/new-york/ui/tags-input\"\r\n\r\nconst frameworks = [\r\n  { value: \"next.js\", label: \"Next.js\" },\r\n  { value: \"sveltekit\", label: \"SvelteKit\" },\r\n  { value: \"nuxt\", label: \"Nuxt\" },\r\n  { value: \"remix\", label: \"Remix\" },\r\n  { value: \"astro\", label: \"Astro\" },\r\n]\r\n\r\nconst modelValue = ref<string[]>([])\r\nconst open = ref(false)\r\nconst searchTerm = ref(\"\")\r\n\r\nconst { contains } = useFilter({ sensitivity: \"base\" })\r\nconst filteredFrameworks = computed(() => {\r\n  const options = frameworks.filter(i => !modelValue.value.includes(i.label))\r\n  return searchTerm.value ? options.filter(option => contains(option.label, searchTerm.value)) : options\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Combobox v-model=\"modelValue\" v-model:open=\"open\" :ignore-filter=\"true\">\r\n    <ComboboxAnchor as-child>\r\n      <TagsInput v-model=\"modelValue\" class=\"px-2 gap-2 w-80\">\r\n        <div class=\"flex gap-2 flex-wrap items-center\">\r\n          <TagsInputItem v-for=\"item in modelValue\" :key=\"item\" :value=\"item\">\r\n            <TagsInputItemText />\r\n            <TagsInputItemDelete />\r\n          </TagsInputItem>\r\n        </div>\r\n\r\n        <ComboboxInput v-model=\"searchTerm\" as-child>\r\n          <TagsInputInput placeholder=\"Framework...\" class=\"min-w-[200px] w-full p-0 border-none focus-visible:ring-0 h-auto\" @keydown.enter.prevent />\r\n        </ComboboxInput>\r\n      </TagsInput>\r\n\r\n      <ComboboxList class=\"w-[--reka-popper-anchor-width]\">\r\n        <ComboboxEmpty />\r\n        <ComboboxGroup>\r\n          <ComboboxItem\r\n            v-for=\"framework in filteredFrameworks\" :key=\"framework.value\" :value=\"framework.label\"\r\n            @select.prevent=\"(ev) => {\r\n\r\n              if (typeof ev.detail.value === 'string') {\r\n                searchTerm = ''\r\n                modelValue.push(ev.detail.value)\r\n              }\r\n\r\n              if (filteredFrameworks.length === 0) {\r\n                open = false\r\n              }\r\n            }\"\r\n          >\r\n            {{ framework.label }}\r\n          </ComboboxItem>\r\n        </ComboboxGroup>\r\n      </ComboboxList>\r\n    </ComboboxAnchor>\r\n  </Combobox>\r\n</template>\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
