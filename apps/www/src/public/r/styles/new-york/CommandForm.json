{
  "name": "CommandForm",
  "type": "registry:example",
  "dependencies": [
    "vee-validate",
    "@vee-validate/zod",
    "zod"
  ],
  "registryDependencies": [
    "button",
    "command",
    "form",
    "popover",
    "toast"
  ],
  "files": [
    {
      "path": "examples/CommandForm.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { toTypedSchema } from \"@vee-validate/zod\"\r\nimport { Check, ChevronsUpDown } from \"lucide-vue-next\"\r\nimport { useForm } from \"vee-validate\"\r\nimport { h } from \"vue\"\r\n\r\nimport * as z from \"zod\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/registry/new-york/ui/button\"\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n} from \"@/registry/new-york/ui/command\"\r\nimport {\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/registry/new-york/ui/form\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/registry/new-york/ui/popover\"\r\nimport { toast } from \"@/registry/new-york/ui/toast\"\r\n\r\nconst languages = [\r\n  { label: \"English\", value: \"en\" },\r\n  { label: \"French\", value: \"fr\" },\r\n  { label: \"German\", value: \"de\" },\r\n  { label: \"Spanish\", value: \"es\" },\r\n  { label: \"Portuguese\", value: \"pt\" },\r\n  { label: \"Russian\", value: \"ru\" },\r\n  { label: \"Japanese\", value: \"ja\" },\r\n  { label: \"Korean\", value: \"ko\" },\r\n  { label: \"Chinese\", value: \"zh\" },\r\n] as const\r\n\r\nconst formSchema = toTypedSchema(z.object({\r\n  language: z.string({\r\n    required_error: \"Please select a language.\",\r\n  }),\r\n}))\r\n\r\nconst { handleSubmit, setFieldValue, values } = useForm({\r\n  validationSchema: formSchema,\r\n  initialValues: {\r\n    language: \"\",\r\n  },\r\n})\r\n\r\nconst onSubmit = handleSubmit((values) => {\r\n  toast({\r\n    title: \"You submitted the following values:\",\r\n    description: h(\"pre\", { class: \"mt-2 w-[340px] rounded-md bg-slate-950 p-4\" }, h(\"code\", { class: \"text-white\" }, JSON.stringify(values, null, 2))),\r\n  })\r\n})\r\n</script>\r\n\r\n<template>\r\n  <form class=\"space-y-6\" @submit=\"onSubmit\">\r\n    <FormField name=\"language\">\r\n      <FormItem class=\"flex flex-col\">\r\n        <FormLabel>Language</FormLabel>\r\n        <Popover>\r\n          <PopoverTrigger as-child>\r\n            <FormControl>\r\n              <Button\r\n                variant=\"outline\"\r\n                role=\"combobox\"\r\n                :class=\"cn('w-[200px] justify-between', !values.language && 'text-muted-foreground')\"\r\n              >\r\n                {{ values.language ? languages.find(\r\n                  (language) => language.value === values.language,\r\n                )?.label : 'Select language...' }}\r\n                <ChevronsUpDown class=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\r\n              </Button>\r\n            </FormControl>\r\n          </PopoverTrigger>\r\n          <PopoverContent class=\"w-[200px] p-0\">\r\n            <Command>\r\n              <CommandInput placeholder=\"Search language...\" />\r\n              <CommandEmpty>Nothing found.</CommandEmpty>\r\n              <CommandList>\r\n                <CommandGroup>\r\n                  <CommandItem\r\n                    v-for=\"language in languages\"\r\n                    :key=\"language.value\"\r\n                    :value=\"language.label\"\r\n                    @select=\"() => {\r\n                      setFieldValue('language', language.value)\r\n                    }\"\r\n                  >\r\n                    {{ language.label }}\r\n                    <Check\r\n                      :class=\"cn('ml-auto h-4 w-4', language.value === values.language ? 'opacity-100' : 'opacity-0')\"\r\n                    />\r\n                  </CommandItem>\r\n                </CommandGroup>\r\n              </CommandList>\r\n            </Command>\r\n          </PopoverContent>\r\n        </Popover>\r\n        <FormDescription>\r\n          This is the language that will be used in the dashboard.\r\n        </FormDescription>\r\n        <FormMessage />\r\n      </FormItem>\r\n    </FormField>\r\n\r\n    <Button type=\"submit\">\r\n      Submit\r\n    </Button>\r\n  </form>\r\n</template>\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
