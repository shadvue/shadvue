{
  "name": "DonutChartColor",
  "type": "registry:example",
  "dependencies": [],
  "registryDependencies": [
    "chart-donut"
  ],
  "files": [
    {
      "path": "examples/DonutChartColor.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { DonutChart } from \"@/registry/new-york/ui/chart-donut\"\r\n\r\nconst data = [\r\n  { name: \"Jan\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n  { name: \"Feb\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n  { name: \"Mar\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n  { name: \"Apr\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n  { name: \"May\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n  { name: \"Jun\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n]\r\n\r\nconst valueFormatter = (tick: number | Date) => typeof tick === \"number\" ? `$ ${new Intl.NumberFormat(\"us\").format(tick).toString()}` : \"\"\r\n</script>\r\n\r\n<template>\r\n  <DonutChart\r\n    index=\"name\"\r\n    :category=\"'total'\"\r\n    :data=\"data\"\r\n    :value-formatter=\"valueFormatter\"\r\n    :colors=\"['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'purple']\"\r\n  />\r\n</template>\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
