{
  "name": "SliderForm",
  "type": "registry:example",
  "dependencies": [
    "vee-validate",
    "@vee-validate/zod",
    "zod"
  ],
  "registryDependencies": [
    "button",
    "form",
    "slider",
    "toast"
  ],
  "files": [
    {
      "path": "examples/SliderForm.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { toTypedSchema } from \"@vee-validate/zod\"\r\nimport { useForm } from \"vee-validate\"\r\nimport { h } from \"vue\"\r\nimport * as z from \"zod\"\r\n\r\nimport { Button } from \"@/registry/new-york/ui/button\"\r\nimport {\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/registry/new-york/ui/form\"\r\nimport { Slider } from \"@/registry/new-york/ui/slider\"\r\nimport { toast } from \"@/registry/new-york/ui/toast\"\r\n\r\nconst formSchema = toTypedSchema(z.object({\r\n  duration: z.array(\r\n    z.number().min(0).max(60),\r\n  ),\r\n}))\r\n\r\nconst { handleSubmit } = useForm({\r\n  validationSchema: formSchema,\r\n  initialValues: {\r\n    duration: [30],\r\n  },\r\n})\r\n\r\nconst onSubmit = handleSubmit((values) => {\r\n  toast({\r\n    title: \"You submitted the following values:\",\r\n    description: h(\"pre\", { class: \"mt-2 w-[340px] rounded-md bg-slate-950 p-4\" }, h(\"code\", { class: \"text-white\" }, JSON.stringify(values, null, 2))),\r\n  })\r\n})\r\n</script>\r\n\r\n<template>\r\n  <form class=\"w-2/3 space-y-6\" @submit=\"onSubmit\">\r\n    <FormField v-slot=\"{ componentField, value }\" name=\"duration\">\r\n      <FormItem>\r\n        <FormLabel>Duration</FormLabel>\r\n        <FormControl>\r\n          <Slider\r\n            :model-value=\"componentField.modelValue\"\r\n            :default-value=\"[30]\"\r\n            :max=\"100\"\r\n            :min=\"0\"\r\n            :step=\"5\"\r\n            :name=\"componentField.name\"\r\n            @update:model-value=\"componentField['onUpdate:modelValue']\"\r\n          />\r\n          <FormDescription class=\"flex justify-between\">\r\n            <span>How many minutes are you available?</span>\r\n            <span>{{ value?.[0] }} min</span>\r\n          </FormDescription>\r\n        </FormControl>\r\n        <FormMessage />\r\n      </FormItem>\r\n    </FormField>\r\n\r\n    <Button type=\"submit\">\r\n      Submit\r\n    </Button>\r\n  </form>\r\n</template>\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
