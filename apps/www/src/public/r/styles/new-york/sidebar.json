{
  "name": "sidebar",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "sheet",
    "input",
    "tooltip",
    "skeleton",
    "separator",
    "button"
  ],
  "files": [
    {
      "path": "ui/sidebar/index.ts",
      "content": "import type { VariantProps } from \"class-variance-authority\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cva } from \"class-variance-authority\"\r\n\r\nexport interface SidebarProps {\r\n  side?: \"left\" | \"right\"\r\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\r\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\r\n  class?: HTMLAttributes[\"class\"]\r\n}\r\n\r\nexport { default as Sidebar } from \"./Sidebar.vue\"\r\nexport { default as SidebarContent } from \"./SidebarContent.vue\"\r\nexport { default as SidebarFooter } from \"./SidebarFooter.vue\"\r\nexport { default as SidebarGroup } from \"./SidebarGroup.vue\"\r\nexport { default as SidebarGroupAction } from \"./SidebarGroupAction.vue\"\r\nexport { default as SidebarGroupContent } from \"./SidebarGroupContent.vue\"\r\nexport { default as SidebarGroupLabel } from \"./SidebarGroupLabel.vue\"\r\nexport { default as SidebarHeader } from \"./SidebarHeader.vue\"\r\nexport { default as SidebarInput } from \"./SidebarInput.vue\"\r\nexport { default as SidebarInset } from \"./SidebarInset.vue\"\r\nexport { default as SidebarMenu } from \"./SidebarMenu.vue\"\r\nexport { default as SidebarMenuAction } from \"./SidebarMenuAction.vue\"\r\nexport { default as SidebarMenuBadge } from \"./SidebarMenuBadge.vue\"\r\nexport { default as SidebarMenuButton } from \"./SidebarMenuButton.vue\"\r\nexport { default as SidebarMenuItem } from \"./SidebarMenuItem.vue\"\r\nexport { default as SidebarMenuSkeleton } from \"./SidebarMenuSkeleton.vue\"\r\nexport { default as SidebarMenuSub } from \"./SidebarMenuSub.vue\"\r\nexport { default as SidebarMenuSubButton } from \"./SidebarMenuSubButton.vue\"\r\nexport { default as SidebarMenuSubItem } from \"./SidebarMenuSubItem.vue\"\r\nexport { default as SidebarProvider } from \"./SidebarProvider.vue\"\r\nexport { default as SidebarRail } from \"./SidebarRail.vue\"\r\nexport { default as SidebarSeparator } from \"./SidebarSeparator.vue\"\r\nexport { default as SidebarTrigger } from \"./SidebarTrigger.vue\"\r\n\r\nexport { useSidebar } from \"./utils\"\r\n\r\nexport const sidebarMenuButtonVariants = cva(\r\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\r\n        outline:\r\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\r\n      },\r\n      size: {\r\n        default: \"h-8 text-sm\",\r\n        sm: \"h-7 text-xs\",\r\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  },\r\n)\r\n\r\nexport type SidebarMenuButtonVariants = VariantProps<typeof sidebarMenuButtonVariants>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/Sidebar.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { SidebarProps } from \".\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Sheet, SheetContent } from \"@/registry/new-york/ui/sheet\"\r\nimport { SIDEBAR_WIDTH_MOBILE, useSidebar } from \"./utils\"\r\n\r\ndefineOptions({\r\n  inheritAttrs: false,\r\n})\r\n\r\nconst props = withDefaults(defineProps<SidebarProps>(), {\r\n  side: \"left\",\r\n  variant: \"sidebar\",\r\n  collapsible: \"offcanvas\",\r\n})\r\n\r\nconst { isMobile, state, openMobile, setOpenMobile } = useSidebar()\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    v-if=\"collapsible === 'none'\"\r\n    :class=\"cn('flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground', props.class)\"\r\n    v-bind=\"$attrs\"\r\n  >\r\n    <slot />\r\n  </div>\r\n\r\n  <Sheet v-else-if=\"isMobile\" :open=\"openMobile\" v-bind=\"$attrs\" @update:open=\"setOpenMobile\">\r\n    <SheetContent\r\n      data-sidebar=\"sidebar\"\r\n      data-mobile=\"true\"\r\n      :side=\"side\"\r\n      class=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\r\n      :style=\"{\r\n        '--sidebar-width': SIDEBAR_WIDTH_MOBILE,\r\n      }\"\r\n    >\r\n      <div class=\"flex h-full w-full flex-col\">\r\n        <slot />\r\n      </div>\r\n    </SheetContent>\r\n  </Sheet>\r\n\r\n  <div\r\n    v-else class=\"group peer hidden md:block\"\r\n    :data-state=\"state\"\r\n    :data-collapsible=\"state === 'collapsed' ? collapsible : ''\"\r\n    :data-variant=\"variant\"\r\n    :data-side=\"side\"\r\n  >\r\n    <!-- This is what handles the sidebar gap on desktop  -->\r\n    <div\r\n      :class=\"cn(\r\n        'duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear',\r\n        'group-data-[collapsible=offcanvas]:w-0',\r\n        'group-data-[side=right]:rotate-180',\r\n        variant === 'floating' || variant === 'inset'\r\n          ? 'group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]'\r\n          : 'group-data-[collapsible=icon]:w-[--sidebar-width-icon]',\r\n      )\"\r\n    />\r\n    <div\r\n      :class=\"cn(\r\n        'duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex',\r\n        side === 'left'\r\n          ? 'left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]'\r\n          : 'right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]',\r\n        // Adjust the padding for floating and inset variants.\r\n        variant === 'floating' || variant === 'inset'\r\n          ? 'p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]'\r\n          : 'group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l',\r\n        props.class,\r\n      )\"\r\n      v-bind=\"$attrs\"\r\n    >\r\n      <div\r\n        data-sidebar=\"sidebar\"\r\n        class=\"flex h-full w-full flex-col text-sidebar-foreground bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\r\n      >\r\n        <slot />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    data-sidebar=\"content\"\r\n    :class=\"cn('flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden', props.class)\"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarFooter.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    data-sidebar=\"footer\"\r\n    :class=\"cn('flex flex-col gap-2 p-2', props.class)\"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    data-sidebar=\"group\"\r\n    :class=\"cn('relative flex w-full min-w-0 flex-col p-2', props.class)\"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarGroupAction.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PrimitiveProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { Primitive } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<PrimitiveProps & {\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <Primitive\r\n    data-sidebar=\"group-action\"\r\n    :as=\"as\"\r\n    :as-child=\"asChild\"\r\n    :class=\"cn(\r\n      'absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\r\n      'after:absolute after:-inset-2 after:md:hidden',\r\n      'group-data-[collapsible=icon]:hidden',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n  </Primitive>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarGroupContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    data-sidebar=\"group-content\"\r\n    :class=\"cn('w-full text-sm', props.class)\"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarGroupLabel.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PrimitiveProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { Primitive } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<PrimitiveProps & {\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <Primitive\r\n    data-sidebar=\"group-label\"\r\n    :as=\"as\"\r\n    :as-child=\"asChild\"\r\n    :class=\"cn(\r\n      'duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0',\r\n      'group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0',\r\n      props.class)\"\r\n  >\r\n    <slot />\r\n  </Primitive>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarHeader.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    data-sidebar=\"header\"\r\n    :class=\"cn('flex flex-col gap-2 p-2', props.class)\"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarInput.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Input } from \"@/registry/new-york/ui/input\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <Input\r\n    data-sidebar=\"input\"\r\n    :class=\"cn(\r\n      'h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n  </Input>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarInset.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <main\r\n    :class=\"cn(\r\n      'relative flex min-h-svh flex-1 flex-col bg-background',\r\n      'peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n  </main>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarMenu.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <ul\r\n    data-sidebar=\"menu\"\r\n    :class=\"cn('flex w-full min-w-0 flex-col gap-1', props.class)\"\r\n  >\r\n    <slot />\r\n  </ul>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarMenuAction.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PrimitiveProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { Primitive } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = withDefaults(defineProps<PrimitiveProps & {\r\n  showOnHover?: boolean\r\n  class?: HTMLAttributes[\"class\"]\r\n}>(), {\r\n  as: \"button\",\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Primitive\r\n    data-sidebar=\"menu-action\"\r\n    :class=\"cn(\r\n      'absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0',\r\n      'after:absolute after:-inset-2 after:md:hidden',\r\n      'peer-data-[size=sm]/menu-button:top-1',\r\n      'peer-data-[size=default]/menu-button:top-1.5',\r\n      'peer-data-[size=lg]/menu-button:top-2.5',\r\n      'group-data-[collapsible=icon]:hidden',\r\n      showOnHover\r\n        && 'group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0',\r\n      props.class,\r\n    )\"\r\n    :as=\"as\"\r\n    :as-child=\"asChild\"\r\n  >\r\n    <slot />\r\n  </Primitive>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarMenuBadge.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    data-sidebar=\"menu-badge\"\r\n    :class=\"cn(\r\n      'absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none',\r\n      'peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground',\r\n      'peer-data-[size=sm]/menu-button:top-1',\r\n      'peer-data-[size=default]/menu-button:top-1.5',\r\n      'peer-data-[size=lg]/menu-button:top-2.5',\r\n      'group-data-[collapsible=icon]:hidden',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarMenuButton.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { Component } from \"vue\"\r\nimport type { SidebarMenuButtonProps } from \"./SidebarMenuButtonChild.vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { Tooltip, TooltipContent, TooltipTrigger } from \"@/registry/new-york/ui/tooltip\"\r\nimport SidebarMenuButtonChild from \"./SidebarMenuButtonChild.vue\"\r\nimport { useSidebar } from \"./utils\"\r\n\r\ndefineOptions({\r\n  inheritAttrs: false,\r\n})\r\n\r\nconst props = withDefaults(defineProps<SidebarMenuButtonProps & {\r\n  tooltip?: string | Component\r\n}>(), {\r\n  as: \"button\",\r\n  variant: \"default\",\r\n  size: \"default\",\r\n})\r\n\r\nconst { isMobile, state } = useSidebar()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"tooltip\")\r\n</script>\r\n\r\n<template>\r\n  <SidebarMenuButtonChild v-if=\"!tooltip\" v-bind=\"{ ...delegatedProps, ...$attrs }\">\r\n    <slot />\r\n  </SidebarMenuButtonChild>\r\n\r\n  <Tooltip v-else>\r\n    <TooltipTrigger as-child>\r\n      <SidebarMenuButtonChild v-bind=\"{ ...delegatedProps, ...$attrs }\">\r\n        <slot />\r\n      </SidebarMenuButtonChild>\r\n    </TooltipTrigger>\r\n    <TooltipContent\r\n      side=\"right\"\r\n      align=\"center\"\r\n      :hidden=\"state !== 'collapsed' || isMobile\"\r\n    >\r\n      <template v-if=\"typeof tooltip === 'string'\">\r\n        {{ tooltip }}\r\n      </template>\r\n      <component :is=\"tooltip\" v-else />\r\n    </TooltipContent>\r\n  </Tooltip>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarMenuButtonChild.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PrimitiveProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport type { SidebarMenuButtonVariants } from \".\"\r\nimport { Primitive } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { sidebarMenuButtonVariants } from \".\"\r\n\r\nexport interface SidebarMenuButtonProps extends PrimitiveProps {\r\n  variant?: SidebarMenuButtonVariants[\"variant\"]\r\n  size?: SidebarMenuButtonVariants[\"size\"]\r\n  isActive?: boolean\r\n  class?: HTMLAttributes[\"class\"]\r\n}\r\n\r\nconst props = withDefaults(defineProps<SidebarMenuButtonProps>(), {\r\n  as: \"button\",\r\n  variant: \"default\",\r\n  size: \"default\",\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Primitive\r\n    data-sidebar=\"menu-button\"\r\n    :data-size=\"size\"\r\n    :data-active=\"isActive\"\r\n    :class=\"cn(sidebarMenuButtonVariants({ variant, size }), props.class)\"\r\n    :as=\"as\"\r\n    :as-child=\"asChild\"\r\n    v-bind=\"$attrs\"\r\n  >\r\n    <slot />\r\n  </Primitive>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarMenuItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <li\r\n    data-sidebar=\"menu-item\"\r\n    :class=\"cn('group/menu-item relative', props.class)\"\r\n  >\r\n    <slot />\r\n  </li>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarMenuSkeleton.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { computed } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Skeleton } from \"@/registry/new-york/ui/skeleton\"\r\n\r\nconst props = defineProps<{\r\n  showIcon?: boolean\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n\r\nconst width = computed(() => {\r\n  return `${Math.floor(Math.random() * 40) + 50}%`\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    data-sidebar=\"menu-skeleton\"\r\n    :class=\"cn('rounded-md h-8 flex gap-2 px-2 items-center', props.class)\"\r\n  >\r\n    <Skeleton\r\n      v-if=\"showIcon\"\r\n      class=\"size-4 rounded-md\"\r\n      data-sidebar=\"menu-skeleton-icon\"\r\n    />\r\n\r\n    <Skeleton\r\n      class=\"h-4 flex-1 max-w-[--skeleton-width]\"\r\n      data-sidebar=\"menu-skeleton-text\"\r\n      :style=\"{ '--skeleton-width': width }\"\r\n    />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarMenuSub.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <ul\r\n    data-sidebar=\"menu-badge\"\r\n    :class=\"cn(\r\n      'mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5',\r\n      'group-data-[collapsible=icon]:hidden',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n  </ul>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarMenuSubButton.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PrimitiveProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { Primitive } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = withDefaults(defineProps<PrimitiveProps & {\r\n  size?: \"sm\" | \"md\"\r\n  isActive?: boolean\r\n  class?: HTMLAttributes[\"class\"]\r\n}>(), {\r\n  as: \"a\",\r\n  size: \"md\",\r\n})\r\n</script>\r\n\r\n<template>\r\n  <Primitive\r\n    data-sidebar=\"menu-sub-button\"\r\n    :as=\"as\"\r\n    :as-child=\"asChild\"\r\n    :data-size=\"size\"\r\n    :data-active=\"isActive\"\r\n    :class=\"cn(\r\n      'flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground',\r\n      'data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground',\r\n      size === 'sm' && 'text-xs',\r\n      size === 'md' && 'text-sm',\r\n      'group-data-[collapsible=icon]:hidden',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n  </Primitive>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarMenuSubItem.vue",
      "content": "<script setup lang=\"ts\">\r\n</script>\r\n\r\n<template>\r\n  <li>\r\n    <slot />\r\n  </li>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarProvider.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes, Ref } from \"vue\"\r\nimport { useEventListener, useMediaQuery, useVModel } from \"@vueuse/core\"\r\nimport { TooltipProvider } from \"reka-ui\"\r\nimport { computed, ref } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { provideSidebarContext, SIDEBAR_COOKIE_MAX_AGE, SIDEBAR_COOKIE_NAME, SIDEBAR_KEYBOARD_SHORTCUT, SIDEBAR_WIDTH, SIDEBAR_WIDTH_ICON } from \"./utils\"\r\n\r\nconst props = withDefaults(defineProps<{\r\n  defaultOpen?: boolean\r\n  open?: boolean\r\n  class?: HTMLAttributes[\"class\"]\r\n}>(), {\r\n  defaultOpen: true,\r\n  open: undefined,\r\n})\r\n\r\nconst emits = defineEmits<{\r\n  \"update:open\": [open: boolean]\r\n}>()\r\n\r\nconst isMobile = useMediaQuery(\"(max-width: 768px)\")\r\nconst openMobile = ref(false)\r\n\r\nconst open = useVModel(props, \"open\", emits, {\r\n  defaultValue: props.defaultOpen ?? false,\r\n  passive: (props.open === undefined) as false,\r\n}) as Ref<boolean>\r\n\r\nfunction setOpen(value: boolean) {\r\n  open.value = value // emits('update:open', value)\r\n\r\n  // This sets the cookie to keep the sidebar state.\r\n  document.cookie = `${SIDEBAR_COOKIE_NAME}=${open.value}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\r\n}\r\n\r\nfunction setOpenMobile(value: boolean) {\r\n  openMobile.value = value\r\n}\r\n\r\n// Helper to toggle the sidebar.\r\nfunction toggleSidebar() {\r\n  return isMobile.value ? setOpenMobile(!openMobile.value) : setOpen(!open.value)\r\n}\r\n\r\nuseEventListener(\"keydown\", (event: KeyboardEvent) => {\r\n  if (event.key === SIDEBAR_KEYBOARD_SHORTCUT && (event.metaKey || event.ctrlKey)) {\r\n    event.preventDefault()\r\n    toggleSidebar()\r\n  }\r\n})\r\n\r\n// We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\r\n// This makes it easier to style the sidebar with Tailwind classes.\r\nconst state = computed(() => open.value ? \"expanded\" : \"collapsed\")\r\n\r\nprovideSidebarContext({\r\n  state,\r\n  open,\r\n  setOpen,\r\n  isMobile,\r\n  openMobile,\r\n  setOpenMobile,\r\n  toggleSidebar,\r\n})\r\n</script>\r\n\r\n<template>\r\n  <TooltipProvider :delay-duration=\"0\">\r\n    <div\r\n      :style=\"{\r\n        '--sidebar-width': SIDEBAR_WIDTH,\r\n        '--sidebar-width-icon': SIDEBAR_WIDTH_ICON,\r\n      }\"\r\n      :class=\"cn('group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar', props.class)\"\r\n      v-bind=\"$attrs\"\r\n    >\r\n      <slot />\r\n    </div>\r\n  </TooltipProvider>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarRail.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { useSidebar } from \"./utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n\r\nconst { toggleSidebar } = useSidebar()\r\n</script>\r\n\r\n<template>\r\n  <button\r\n    data-sidebar=\"rail\"\r\n    aria-label=\"Toggle Sidebar\"\r\n    :tabindex=\"-1\"\r\n    title=\"Toggle Sidebar\"\r\n    :class=\"cn(\r\n      'absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex',\r\n      '[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize',\r\n      '[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize',\r\n      'group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar',\r\n      '[[data-side=left][data-collapsible=offcanvas]_&]:-right-2',\r\n      '[[data-side=right][data-collapsible=offcanvas]_&]:-left-2',\r\n      props.class,\r\n    )\"\r\n    @click=\"toggleSidebar\"\r\n  >\r\n    <slot />\r\n  </button>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarSeparator.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Separator } from \"@/registry/new-york/ui/separator\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <Separator\r\n    data-sidebar=\"separator\"\r\n    :class=\"cn('mx-2 w-auto bg-sidebar-border', props.class)\"\r\n  >\r\n    <slot />\r\n  </Separator>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/SidebarTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { PanelLeft } from \"lucide-vue-next\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/registry/new-york/ui/button\"\r\nimport { useSidebar } from \"./utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n\r\nconst { toggleSidebar } = useSidebar()\r\n</script>\r\n\r\n<template>\r\n  <Button\r\n    data-sidebar=\"trigger\"\r\n    variant=\"ghost\"\r\n    size=\"icon\"\r\n    :class=\"cn('h-7 w-7', props.class)\"\r\n    @click=\"toggleSidebar\"\r\n  >\r\n    <PanelLeft />\r\n    <span class=\"sr-only\">Toggle Sidebar</span>\r\n  </Button>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/sidebar/utils.ts",
      "content": "import type { ComputedRef, Ref } from \"vue\"\r\nimport { createContext } from \"reka-ui\"\r\n\r\nexport const SIDEBAR_COOKIE_NAME = \"sidebar_state\"\r\nexport const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\r\nexport const SIDEBAR_WIDTH = \"16rem\"\r\nexport const SIDEBAR_WIDTH_MOBILE = \"18rem\"\r\nexport const SIDEBAR_WIDTH_ICON = \"3rem\"\r\nexport const SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\r\n\r\nexport const [useSidebar, provideSidebarContext] = createContext<{\r\n  state: ComputedRef<\"expanded\" | \"collapsed\">\r\n  open: Ref<boolean>\r\n  setOpen: (value: boolean) => void\r\n  isMobile: Ref<boolean>\r\n  openMobile: Ref<boolean>\r\n  setOpenMobile: (value: boolean) => void\r\n  toggleSidebar: () => void\r\n}>(\"Sidebar\")\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {
          "colors": {
            "sidebar": {
              "DEFAULT": "hsl(var(--sidebar-background))",
              "foreground": "hsl(var(--sidebar-foreground))",
              "primary": "hsl(var(--sidebar-primary))",
              "primary-foreground": "hsl(var(--sidebar-primary-foreground))",
              "accent": "hsl(var(--sidebar-accent))",
              "accent-foreground": "hsl(var(--sidebar-accent-foreground))",
              "border": "hsl(var(--sidebar-border))",
              "ring": "hsl(var(--sidebar-ring))"
            }
          }
        }
      }
    }
  },
  "cssVars": {
    "light": {
      "sidebar-background": "0 0% 98%",
      "sidebar-foreground": "240 5.3% 26.1%",
      "sidebar-primary": "240 5.9% 10%",
      "sidebar-primary-foreground": "0 0% 98%",
      "sidebar-accent": "240 4.8% 95.9%",
      "sidebar-accent-foreground": "240 5.9% 10%",
      "sidebar-border": "220 13% 91%",
      "sidebar-ring": "217.2 91.2% 59.8%"
    },
    "dark": {
      "sidebar-background": "240 5.9% 10%",
      "sidebar-foreground": "240 4.8% 95.9%",
      "sidebar-primary": "224.3 76.3% 48%",
      "sidebar-primary-foreground": "0 0% 100%",
      "sidebar-accent": "240 3.7% 15.9%",
      "sidebar-accent-foreground": "240 4.8% 95.9%",
      "sidebar-border": "240 3.7% 15.9%",
      "sidebar-ring": "217.2 91.2% 59.8%"
    }
  }
}
