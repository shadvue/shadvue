{
  "name": "calendar",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "ui/calendar/Calendar.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarRootEmits, CalendarRootProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { CalendarRoot, useForwardPropsEmits } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { CalendarCell, CalendarCellTrigger, CalendarGrid, CalendarGridBody, CalendarGridHead, CalendarGridRow, CalendarHeadCell, CalendarHeader, CalendarHeading, CalendarNextButton, CalendarPrevButton } from \".\"\r\n\r\nconst props = defineProps<CalendarRootProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst emits = defineEmits<CalendarRootEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <CalendarRoot\r\n    v-slot=\"{ grid, weekDays }\"\r\n    :class=\"cn('p-3', props.class)\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <CalendarHeader>\r\n      <CalendarPrevButton />\r\n      <CalendarHeading />\r\n      <CalendarNextButton />\r\n    </CalendarHeader>\r\n\r\n    <div class=\"flex flex-col gap-y-4 mt-4 sm:flex-row sm:gap-x-4 sm:gap-y-0\">\r\n      <CalendarGrid v-for=\"month in grid\" :key=\"month.value.toString()\">\r\n        <CalendarGridHead>\r\n          <CalendarGridRow>\r\n            <CalendarHeadCell\r\n              v-for=\"day in weekDays\" :key=\"day\"\r\n            >\r\n              {{ day }}\r\n            </CalendarHeadCell>\r\n          </CalendarGridRow>\r\n        </CalendarGridHead>\r\n        <CalendarGridBody>\r\n          <CalendarGridRow v-for=\"(weekDates, index) in month.rows\" :key=\"`weekDate-${index}`\" class=\"mt-2 w-full\">\r\n            <CalendarCell\r\n              v-for=\"weekDate in weekDates\"\r\n              :key=\"weekDate.toString()\"\r\n              :date=\"weekDate\"\r\n            >\r\n              <CalendarCellTrigger\r\n                :day=\"weekDate\"\r\n                :month=\"month.value\"\r\n              />\r\n            </CalendarCell>\r\n          </CalendarGridRow>\r\n        </CalendarGridBody>\r\n      </CalendarGrid>\r\n    </div>\r\n  </CalendarRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarCell.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarCellProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { CalendarCell, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<CalendarCellProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <CalendarCell\r\n    :class=\"cn('relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([data-selected])]:rounded-md [&:has([data-selected])]:bg-accent [&:has([data-selected][data-outside-view])]:bg-accent/50', props.class)\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot />\r\n  </CalendarCell>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarCellTrigger.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarCellTriggerProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { CalendarCellTrigger, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/new-york/ui/button\"\r\n\r\nconst props = defineProps<CalendarCellTriggerProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <CalendarCellTrigger\r\n    :class=\"cn(\r\n      buttonVariants({ variant: 'ghost' }),\r\n      'h-8 w-8 p-0 font-normal',\r\n      '[&[data-today]:not([data-selected])]:bg-accent [&[data-today]:not([data-selected])]:text-accent-foreground',\r\n      // Selected\r\n      'data-[selected]:bg-primary data-[selected]:text-primary-foreground data-[selected]:opacity-100 data-[selected]:hover:bg-primary data-[selected]:hover:text-primary-foreground data-[selected]:focus:bg-primary data-[selected]:focus:text-primary-foreground',\r\n      // Disabled\r\n      'data-[disabled]:text-muted-foreground data-[disabled]:opacity-50',\r\n      // Unavailable\r\n      'data-[unavailable]:text-destructive-foreground data-[unavailable]:line-through',\r\n      // Outside months\r\n      'data-[outside-view]:text-muted-foreground data-[outside-view]:opacity-50 [&[data-outside-view][data-selected]]:bg-accent/50 [&[data-outside-view][data-selected]]:text-muted-foreground [&[data-outside-view][data-selected]]:opacity-30',\r\n      props.class,\r\n    )\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot />\r\n  </CalendarCellTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarGrid.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarGridProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { CalendarGrid, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<CalendarGridProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <CalendarGrid\r\n    :class=\"cn('w-full border-collapse space-y-1', props.class)\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot />\r\n  </CalendarGrid>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarGridBody.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarGridBodyProps } from \"reka-ui\"\nimport { CalendarGridBody } from \"reka-ui\"\r\n\r\nconst props = defineProps<CalendarGridBodyProps>()\r\n</script>\r\n\r\n<template>\r\n  <CalendarGridBody v-bind=\"props\">\r\n    <slot />\r\n  </CalendarGridBody>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarGridHead.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarGridHeadProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\nimport { CalendarGridHead } from \"reka-ui\"\r\n\r\nconst props = defineProps<CalendarGridHeadProps & { class?: HTMLAttributes[\"class\"] }>()\r\n</script>\r\n\r\n<template>\r\n  <CalendarGridHead v-bind=\"props\">\r\n    <slot />\r\n  </CalendarGridHead>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarGridRow.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarGridRowProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { CalendarGridRow, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<CalendarGridRowProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <CalendarGridRow :class=\"cn('flex', props.class)\" v-bind=\"forwardedProps\">\r\n    <slot />\r\n  </CalendarGridRow>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarHeadCell.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarHeadCellProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { CalendarHeadCell, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<CalendarHeadCellProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <CalendarHeadCell :class=\"cn('w-8 rounded-md text-[0.8rem] font-normal text-muted-foreground', props.class)\" v-bind=\"forwardedProps\">\r\n    <slot />\r\n  </CalendarHeadCell>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarHeader.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarHeaderProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { CalendarHeader, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<CalendarHeaderProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <CalendarHeader :class=\"cn('relative flex w-full items-center justify-between pt-1', props.class)\" v-bind=\"forwardedProps\">\r\n    <slot />\r\n  </CalendarHeader>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarHeading.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarHeadingProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { CalendarHeading, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<CalendarHeadingProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\ndefineSlots<{\r\n  default: (props: { headingValue: string }) => any\r\n}>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <CalendarHeading\r\n    v-slot=\"{ headingValue }\"\r\n    :class=\"cn('text-sm font-medium', props.class)\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot :heading-value>\r\n      {{ headingValue }}\r\n    </slot>\r\n  </CalendarHeading>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarNextButton.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarNextProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronRight } from \"lucide-vue-next\"\nimport { CalendarNext, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/new-york/ui/button\"\r\n\r\nconst props = defineProps<CalendarNextProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <CalendarNext\r\n    :class=\"cn(\r\n      buttonVariants({ variant: 'outline' }),\r\n      'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100',\r\n      props.class,\r\n    )\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot>\r\n      <ChevronRight class=\"h-4 w-4\" />\r\n    </slot>\r\n  </CalendarNext>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/CalendarPrevButton.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { CalendarPrevProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronLeft } from \"lucide-vue-next\"\nimport { CalendarPrev, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/new-york/ui/button\"\r\n\r\nconst props = defineProps<CalendarPrevProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <CalendarPrev\r\n    :class=\"cn(\r\n      buttonVariants({ variant: 'outline' }),\r\n      'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100',\r\n      props.class,\r\n    )\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot>\r\n      <ChevronLeft class=\"h-4 w-4\" />\r\n    </slot>\r\n  </CalendarPrev>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/calendar/index.ts",
      "content": "export { default as Calendar } from \"./Calendar.vue\"\r\nexport { default as CalendarCell } from \"./CalendarCell.vue\"\r\nexport { default as CalendarCellTrigger } from \"./CalendarCellTrigger.vue\"\r\nexport { default as CalendarGrid } from \"./CalendarGrid.vue\"\r\nexport { default as CalendarGridBody } from \"./CalendarGridBody.vue\"\r\nexport { default as CalendarGridHead } from \"./CalendarGridHead.vue\"\r\nexport { default as CalendarGridRow } from \"./CalendarGridRow.vue\"\r\nexport { default as CalendarHeadCell } from \"./CalendarHeadCell.vue\"\r\nexport { default as CalendarHeader } from \"./CalendarHeader.vue\"\r\nexport { default as CalendarHeading } from \"./CalendarHeading.vue\"\r\nexport { default as CalendarNextButton } from \"./CalendarNextButton.vue\"\r\nexport { default as CalendarPrevButton } from \"./CalendarPrevButton.vue\"\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
