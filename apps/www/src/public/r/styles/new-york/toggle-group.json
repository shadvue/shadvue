{
  "name": "toggle-group",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "toggle"
  ],
  "files": [
    {
      "path": "ui/toggle-group/index.ts",
      "content": "export { default as ToggleGroup } from \"./ToggleGroup.vue\"\r\nexport { default as ToggleGroupItem } from \"./ToggleGroupItem.vue\"\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/toggle-group/ToggleGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { VariantProps } from \"class-variance-authority\"\r\nimport type { ToggleGroupRootEmits, ToggleGroupRootProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport type { toggleVariants } from \"@/registry/new-york/ui/toggle\"\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ToggleGroupRoot, useForwardPropsEmits } from \"reka-ui\"\nimport { provide } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ntype ToggleGroupVariants = VariantProps<typeof toggleVariants>\r\n\r\nconst props = defineProps<ToggleGroupRootProps & {\r\n  class?: HTMLAttributes[\"class\"]\r\n  variant?: ToggleGroupVariants[\"variant\"]\r\n  size?: ToggleGroupVariants[\"size\"]\r\n}>()\r\nconst emits = defineEmits<ToggleGroupRootEmits>()\r\n\r\nprovide(\"toggleGroup\", {\r\n  variant: props.variant,\r\n  size: props.size,\r\n})\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <ToggleGroupRoot v-slot=\"slotProps\" v-bind=\"forwarded\" :class=\"cn('flex items-center justify-center gap-1', props.class)\">\r\n    <slot v-bind=\"slotProps\" />\r\n  </ToggleGroupRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/toggle-group/ToggleGroupItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { VariantProps } from \"class-variance-authority\"\r\nimport type { ToggleGroupItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ToggleGroupItem, useForwardProps } from \"reka-ui\"\nimport { inject } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { toggleVariants } from \"@/registry/new-york/ui/toggle\"\r\n\r\ntype ToggleGroupVariants = VariantProps<typeof toggleVariants>\r\n\r\nconst props = defineProps<ToggleGroupItemProps & {\r\n  class?: HTMLAttributes[\"class\"]\r\n  variant?: ToggleGroupVariants[\"variant\"]\r\n  size?: ToggleGroupVariants[\"size\"]\r\n}>()\r\n\r\nconst context = inject<ToggleGroupVariants>(\"toggleGroup\")\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\", \"size\", \"variant\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <ToggleGroupItem\r\n    v-slot=\"slotProps\"\r\n    v-bind=\"forwardedProps\" :class=\"cn(toggleVariants({\r\n      variant: context?.variant || variant,\r\n      size: context?.size || size,\r\n    }), props.class)\"\r\n  >\r\n    <slot v-bind=\"slotProps\" />\r\n  </ToggleGroupItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
