{
  "name": "AutoFormApi",
  "type": "registry:example",
  "dependencies": [],
  "registryDependencies": [
    "auto-form",
    "button",
    "toast"
  ],
  "files": [
    {
      "path": "examples/AutoFormApi.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { h, onMounted, shallowRef } from \"vue\"\r\nimport * as z from \"zod\"\r\nimport { AutoForm } from \"@/registry/new-york/ui/auto-form\"\r\nimport { Button } from \"@/registry/new-york/ui/button\"\r\nimport { toast } from \"@/registry/new-york/ui/toast\"\r\n\r\nconst schema = shallowRef<z.ZodObject<any, any, any> | null>(null)\r\n\r\nonMounted(() => {\r\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(response => response.json())\r\n    .then((data) => {\r\n      schema.value = z.object({\r\n        user: z.enum(data.map((user: any) => user.name)),\r\n      })\r\n    })\r\n})\r\n\r\nfunction onSubmit(values: Record<string, any>) {\r\n  toast({\r\n    title: \"You submitted the following values:\",\r\n    description: h(\"pre\", { class: \"mt-2 w-[340px] rounded-md bg-slate-950 p-4\" }, h(\"code\", { class: \"text-white\" }, JSON.stringify(values, null, 2))),\r\n  })\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex justify-center w-full\">\r\n    <AutoForm\r\n      v-if=\"schema\"\r\n      class=\"w-2/3 space-y-6\"\r\n      :schema=\"schema\"\r\n      @submit=\"onSubmit\"\r\n    >\r\n      <Button type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </AutoForm>\r\n\r\n    <div v-else>\r\n      Loading...\r\n    </div>\r\n  </div>\r\n</template>\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
