{
  "name": "range-calendar",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "ui/range-calendar/index.ts",
      "content": "export { default as RangeCalendar } from \"./RangeCalendar.vue\"\r\nexport { default as RangeCalendarCell } from \"./RangeCalendarCell.vue\"\r\nexport { default as RangeCalendarCellTrigger } from \"./RangeCalendarCellTrigger.vue\"\r\nexport { default as RangeCalendarGrid } from \"./RangeCalendarGrid.vue\"\r\nexport { default as RangeCalendarGridBody } from \"./RangeCalendarGridBody.vue\"\r\nexport { default as RangeCalendarGridHead } from \"./RangeCalendarGridHead.vue\"\r\nexport { default as RangeCalendarGridRow } from \"./RangeCalendarGridRow.vue\"\r\nexport { default as RangeCalendarHeadCell } from \"./RangeCalendarHeadCell.vue\"\r\nexport { default as RangeCalendarHeader } from \"./RangeCalendarHeader.vue\"\r\nexport { default as RangeCalendarHeading } from \"./RangeCalendarHeading.vue\"\r\nexport { default as RangeCalendarNextButton } from \"./RangeCalendarNextButton.vue\"\r\nexport { default as RangeCalendarPrevButton } from \"./RangeCalendarPrevButton.vue\"\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendar.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarRootEmits, RangeCalendarRootProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { RangeCalendarRoot, useForwardPropsEmits } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { RangeCalendarCell, RangeCalendarCellTrigger, RangeCalendarGrid, RangeCalendarGridBody, RangeCalendarGridHead, RangeCalendarGridRow, RangeCalendarHeadCell, RangeCalendarHeader, RangeCalendarHeading, RangeCalendarNextButton, RangeCalendarPrevButton } from \".\"\r\n\r\nconst props = defineProps<RangeCalendarRootProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst emits = defineEmits<RangeCalendarRootEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarRoot\r\n    v-slot=\"{ grid, weekDays }\"\r\n    :class=\"cn('p-3', props.class)\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <RangeCalendarHeader>\r\n      <RangeCalendarPrevButton />\r\n      <RangeCalendarHeading />\r\n      <RangeCalendarNextButton />\r\n    </RangeCalendarHeader>\r\n\r\n    <div class=\"flex flex-col gap-y-4 mt-4 sm:flex-row sm:gap-x-4 sm:gap-y-0\">\r\n      <RangeCalendarGrid v-for=\"month in grid\" :key=\"month.value.toString()\">\r\n        <RangeCalendarGridHead>\r\n          <RangeCalendarGridRow>\r\n            <RangeCalendarHeadCell\r\n              v-for=\"day in weekDays\" :key=\"day\"\r\n            >\r\n              {{ day }}\r\n            </RangeCalendarHeadCell>\r\n          </RangeCalendarGridRow>\r\n        </RangeCalendarGridHead>\r\n        <RangeCalendarGridBody>\r\n          <RangeCalendarGridRow v-for=\"(weekDates, index) in month.rows\" :key=\"`weekDate-${index}`\" class=\"mt-2 w-full\">\r\n            <RangeCalendarCell\r\n              v-for=\"weekDate in weekDates\"\r\n              :key=\"weekDate.toString()\"\r\n              :date=\"weekDate\"\r\n            >\r\n              <RangeCalendarCellTrigger\r\n                :day=\"weekDate\"\r\n                :month=\"month.value\"\r\n              />\r\n            </RangeCalendarCell>\r\n          </RangeCalendarGridRow>\r\n        </RangeCalendarGridBody>\r\n      </RangeCalendarGrid>\r\n    </div>\r\n  </RangeCalendarRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendarCell.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarCellProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { RangeCalendarCell, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<RangeCalendarCellProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarCell\r\n    :class=\"cn('relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([data-selected])]:bg-accent first:[&:has([data-selected])]:rounded-l-md last:[&:has([data-selected])]:rounded-r-md [&:has([data-selected][data-outside-view])]:bg-accent/50 [&:has([data-selected][data-selection-end])]:rounded-r-md [&:has([data-selected][data-selection-start])]:rounded-l-md', props.class)\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot />\r\n  </RangeCalendarCell>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendarCellTrigger.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarCellTriggerProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { RangeCalendarCellTrigger, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/new-york/ui/button\"\r\n\r\nconst props = defineProps<RangeCalendarCellTriggerProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarCellTrigger\r\n    :class=\"cn(\r\n      buttonVariants({ variant: 'ghost' }),\r\n      'h-8 w-8 p-0 font-normal data-[selected]:opacity-100',\r\n      '[&[data-today]:not([data-selected])]:bg-accent [&[data-today]:not([data-selected])]:text-accent-foreground',\r\n      // Selection Start\r\n      'data-[selection-start]:bg-primary data-[selection-start]:text-primary-foreground data-[selection-start]:hover:bg-primary data-[selection-start]:hover:text-primary-foreground data-[selection-start]:focus:bg-primary data-[selection-start]:focus:text-primary-foreground',\r\n      // Selection End\r\n      'data-[selection-end]:bg-primary data-[selection-end]:text-primary-foreground data-[selection-end]:hover:bg-primary data-[selection-end]:hover:text-primary-foreground data-[selection-end]:focus:bg-primary data-[selection-end]:focus:text-primary-foreground',\r\n      // Outside months\r\n      'data-[outside-view]:text-muted-foreground data-[outside-view]:opacity-50 [&[data-outside-view][data-selected]]:text-muted-foreground [&[data-outside-view][data-selected]]:opacity-30',\r\n      // Disabled\r\n      'data-[disabled]:text-muted-foreground data-[disabled]:opacity-50',\r\n      // Unavailable\r\n      'data-[unavailable]:text-destructive-foreground data-[unavailable]:line-through',\r\n      props.class,\r\n    )\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot />\r\n  </RangeCalendarCellTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendarGrid.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarGridProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { RangeCalendarGrid, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<RangeCalendarGridProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarGrid\r\n    :class=\"cn('w-full border-collapse space-y-1', props.class)\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot />\r\n  </RangeCalendarGrid>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendarGridBody.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarGridBodyProps } from \"reka-ui\"\nimport { RangeCalendarGridBody } from \"reka-ui\"\r\n\r\nconst props = defineProps<RangeCalendarGridBodyProps>()\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarGridBody v-bind=\"props\">\r\n    <slot />\r\n  </RangeCalendarGridBody>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendarGridHead.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarGridHeadProps } from \"reka-ui\"\nimport { RangeCalendarGridHead } from \"reka-ui\"\r\n\r\nconst props = defineProps<RangeCalendarGridHeadProps>()\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarGridHead v-bind=\"props\">\r\n    <slot />\r\n  </RangeCalendarGridHead>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendarGridRow.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarGridRowProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { RangeCalendarGridRow, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<RangeCalendarGridRowProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarGridRow :class=\"cn('flex', props.class)\" v-bind=\"forwardedProps\">\r\n    <slot />\r\n  </RangeCalendarGridRow>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendarHeadCell.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarHeadCellProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { RangeCalendarHeadCell, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<RangeCalendarHeadCellProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarHeadCell\r\n    :class=\"cn('w-8 rounded-md text-[0.8rem] font-normal text-muted-foreground', props.class)\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot />\r\n  </RangeCalendarHeadCell>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendarHeader.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarHeaderProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { RangeCalendarHeader, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<RangeCalendarHeaderProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarHeader :class=\"cn('relative flex w-full items-center justify-between pt-1', props.class)\" v-bind=\"forwardedProps\">\r\n    <slot />\r\n  </RangeCalendarHeader>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendarHeading.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarHeadingProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { RangeCalendarHeading, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<RangeCalendarHeadingProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\ndefineSlots<{\r\n  default: (props: { headingValue: string }) => any\r\n}>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarHeading\r\n    v-slot=\"{ headingValue }\"\r\n    :class=\"cn('text-sm font-medium', props.class)\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot :heading-value>\r\n      {{ headingValue }}\r\n    </slot>\r\n  </RangeCalendarHeading>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendarNextButton.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarNextProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronRight } from \"lucide-vue-next\"\nimport { RangeCalendarNext, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/new-york/ui/button\"\r\n\r\nconst props = defineProps<RangeCalendarNextProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarNext\r\n    :class=\"cn(\r\n      buttonVariants({ variant: 'outline' }),\r\n      'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100',\r\n      props.class,\r\n    )\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot>\r\n      <ChevronRight class=\"h-4 w-4\" />\r\n    </slot>\r\n  </RangeCalendarNext>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/range-calendar/RangeCalendarPrevButton.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { RangeCalendarPrevProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronLeft } from \"lucide-vue-next\"\nimport { RangeCalendarPrev, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/new-york/ui/button\"\r\n\r\nconst props = defineProps<RangeCalendarPrevProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <RangeCalendarPrev\r\n    :class=\"cn(\r\n      buttonVariants({ variant: 'outline' }),\r\n      'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100',\r\n      props.class,\r\n    )\"\r\n    v-bind=\"forwardedProps\"\r\n  >\r\n    <slot>\r\n      <ChevronLeft class=\"h-4 w-4\" />\r\n    </slot>\r\n  </RangeCalendarPrev>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
