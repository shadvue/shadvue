{
  "name": "drawer",
  "type": "registry:ui",
  "dependencies": [
    "vaul-vue",
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui/drawer/Drawer.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { DrawerRootEmits, DrawerRootProps } from \"vaul-vue\"\r\nimport { useForwardPropsEmits } from \"reka-ui\"\r\nimport { DrawerRoot } from \"vaul-vue\"\r\n\r\nconst props = withDefaults(defineProps<DrawerRootProps>(), {\r\n  shouldScaleBackground: true,\r\n})\r\n\r\nconst emits = defineEmits<DrawerRootEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <DrawerRoot v-bind=\"forwarded\">\r\n    <slot />\r\n  </DrawerRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/drawer/DrawerContent.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { DialogContentEmits, DialogContentProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { useForwardPropsEmits } from \"reka-ui\"\r\nimport { DrawerContent, DrawerPortal } from \"vaul-vue\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport DrawerOverlay from \"./DrawerOverlay.vue\"\r\n\r\nconst props = defineProps<DialogContentProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<DialogContentEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\nconst forwardedProps = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <DrawerPortal>\r\n    <DrawerOverlay />\r\n    <DrawerContent\r\n      v-bind=\"forwardedProps\" :class=\"cn(\r\n        'fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background',\r\n        props.class,\r\n      )\"\r\n    >\r\n      <div class=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\r\n      <slot />\r\n    </DrawerContent>\r\n  </DrawerPortal>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/drawer/DrawerDescription.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { DrawerDescriptionProps } from \"vaul-vue\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { DrawerDescription } from \"vaul-vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<DrawerDescriptionProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <DrawerDescription v-bind=\"delegatedProps\" :class=\"cn('text-sm text-muted-foreground', props.class)\">\r\n    <slot />\r\n  </DrawerDescription>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/drawer/DrawerFooter.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <div :class=\"cn('mt-auto flex flex-col gap-2 p-4', props.class)\">\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/drawer/DrawerHeader.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <div :class=\"cn('grid gap-1.5 p-4 text-center sm:text-left', props.class)\">\r\n    <slot />\r\n  </div>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/drawer/DrawerOverlay.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { DialogOverlayProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { DrawerOverlay } from \"vaul-vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<DialogOverlayProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <DrawerOverlay v-bind=\"delegatedProps\" :class=\"cn('fixed inset-0 z-50 bg-black/80', props.class)\" />\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/drawer/DrawerTitle.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { DrawerTitleProps } from \"vaul-vue\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { DrawerTitle } from \"vaul-vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<DrawerTitleProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <DrawerTitle v-bind=\"delegatedProps\" :class=\"cn('text-lg font-semibold leading-none tracking-tight', props.class)\">\r\n    <slot />\r\n  </DrawerTitle>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/drawer/index.ts",
      "content": "export { default as Drawer } from \"./Drawer.vue\"\r\nexport { default as DrawerContent } from \"./DrawerContent.vue\"\r\nexport { default as DrawerDescription } from \"./DrawerDescription.vue\"\r\nexport { default as DrawerFooter } from \"./DrawerFooter.vue\"\r\nexport { default as DrawerHeader } from \"./DrawerHeader.vue\"\r\nexport { default as DrawerOverlay } from \"./DrawerOverlay.vue\"\r\nexport { default as DrawerTitle } from \"./DrawerTitle.vue\"\r\nexport { DrawerClose, DrawerPortal, DrawerTrigger } from \"vaul-vue\"\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
