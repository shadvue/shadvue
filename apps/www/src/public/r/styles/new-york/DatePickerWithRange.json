{
  "name": "DatePickerWithRange",
  "type": "registry:example",
  "dependencies": [
    "reka-ui"
  ],
  "registryDependencies": [
    "button",
    "popover",
    "range-calendar"
  ],
  "files": [
    {
      "path": "examples/DatePickerWithRange.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DateRange } from \"reka-ui\"\r\nimport type { Ref } from \"vue\"\r\n\r\nimport {\r\n  CalendarDate,\r\n  DateFormatter,\r\n  getLocalTimeZone,\r\n} from \"@internationalized/date\"\r\nimport { CalendarIcon } from \"lucide-vue-next\"\r\nimport { ref } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/registry/new-york/ui/button\"\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/registry/new-york/ui/popover\"\r\nimport { RangeCalendar } from \"@/registry/new-york/ui/range-calendar\"\r\n\r\nconst df = new DateFormatter(\"en-US\", {\r\n  dateStyle: \"medium\",\r\n})\r\n\r\nconst value = ref({\r\n  start: new CalendarDate(2022, 1, 20),\r\n  end: new CalendarDate(2022, 1, 20).add({ days: 20 }),\r\n}) as Ref<DateRange>\r\n</script>\r\n\r\n<template>\r\n  <Popover>\r\n    <PopoverTrigger as-child>\r\n      <Button\r\n        variant=\"outline\"\r\n        :class=\"cn(\r\n          'w-[280px] justify-start text-left font-normal',\r\n          !value && 'text-muted-foreground',\r\n        )\"\r\n      >\r\n        <CalendarIcon class=\"mr-2 h-4 w-4\" />\r\n        <template v-if=\"value.start\">\r\n          <template v-if=\"value.end\">\r\n            {{ df.format(value.start.toDate(getLocalTimeZone())) }} - {{ df.format(value.end.toDate(getLocalTimeZone())) }}\r\n          </template>\r\n\r\n          <template v-else>\r\n            {{ df.format(value.start.toDate(getLocalTimeZone())) }}\r\n          </template>\r\n        </template>\r\n        <template v-else>\r\n          Pick a date\r\n        </template>\r\n      </Button>\r\n    </PopoverTrigger>\r\n    <PopoverContent class=\"w-auto p-0\">\r\n      <RangeCalendar v-model=\"value\" initial-focus :number-of-months=\"2\" @update:start-value=\"(startDate) => value.start = startDate\" />\r\n    </PopoverContent>\r\n  </Popover>\r\n</template>\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
