{
  "name": "combobox",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui/combobox/Combobox.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ComboboxRootEmits, ComboboxRootProps } from \"reka-ui\"\r\nimport { ComboboxRoot, useForwardPropsEmits } from \"reka-ui\"\r\n\r\nconst props = defineProps<ComboboxRootProps>()\r\nconst emits = defineEmits<ComboboxRootEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <ComboboxRoot v-bind=\"forwarded\">\r\n    <slot />\r\n  </ComboboxRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxAnchor.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ComboboxAnchorProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ComboboxAnchor, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ComboboxAnchorProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <ComboboxAnchor\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn('w-[200px]', props.class)\"\r\n  >\r\n    <slot />\r\n  </ComboboxAnchor>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxEmpty.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ComboboxEmptyProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ComboboxEmpty } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ComboboxEmptyProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <ComboboxEmpty v-bind=\"delegatedProps\" :class=\"cn('py-6 text-center text-sm', props.class)\">\r\n    <slot />\r\n  </ComboboxEmpty>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ComboboxGroupProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ComboboxGroup, ComboboxLabel } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ComboboxGroupProps & {\r\n  class?: HTMLAttributes[\"class\"]\r\n  heading?: string\r\n}>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <ComboboxGroup\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground', props.class)\"\r\n  >\r\n    <ComboboxLabel v-if=\"heading\" class=\"px-2 py-1.5 text-xs font-medium text-muted-foreground\">\r\n      {{ heading }}\r\n    </ComboboxLabel>\r\n    <slot />\r\n  </ComboboxGroup>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxInput.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ComboboxInputEmits, ComboboxInputProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ComboboxInput, useForwardPropsEmits } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ComboboxInputProps & {\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n\r\nconst emits = defineEmits<ComboboxInputEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <ComboboxInput\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn('flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50', props.class)\"\r\n  >\r\n    <slot />\r\n  </ComboboxInput>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ComboboxItemEmits, ComboboxItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ComboboxItem, useForwardPropsEmits } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ComboboxItemProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<ComboboxItemEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <ComboboxItem\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn('relative flex cursor-default gap-2 select-none justify-between items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:size-4 [&_svg]:shrink-0', props.class)\"\r\n  >\r\n    <slot />\r\n  </ComboboxItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxList.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ComboboxContentEmits, ComboboxContentProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ComboboxContent, ComboboxPortal, ComboboxViewport, useForwardPropsEmits } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = withDefaults(defineProps<ComboboxContentProps & { class?: HTMLAttributes[\"class\"] }>(), {\r\n  position: \"popper\",\r\n  align: \"center\",\r\n  sideOffset: 4,\r\n})\r\nconst emits = defineEmits<ComboboxContentEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <ComboboxPortal>\r\n    <ComboboxContent\r\n      v-bind=\"forwarded\"\r\n      :class=\"cn('z-50 w-[200px] rounded-md border bg-popover text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', props.class)\"\r\n    >\r\n      <ComboboxViewport>\r\n        <slot />\r\n      </ComboboxViewport>\r\n    </ComboboxContent>\r\n  </ComboboxPortal>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxSeparator.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ComboboxSeparatorProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ComboboxSeparator } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ComboboxSeparatorProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <ComboboxSeparator\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('-mx-1 h-px bg-border', props.class)\"\r\n  >\r\n    <slot />\r\n  </ComboboxSeparator>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/ComboboxTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { ComboboxTriggerProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ComboboxTrigger, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<ComboboxTriggerProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <ComboboxTrigger\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn('', props.class)\"\r\n    tabindex=\"0\"\r\n  >\r\n    <slot />\r\n  </ComboboxTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/combobox/index.ts",
      "content": "export { default as Combobox } from \"./Combobox.vue\"\r\nexport { default as ComboboxAnchor } from \"./ComboboxAnchor.vue\"\r\nexport { default as ComboboxEmpty } from \"./ComboboxEmpty.vue\"\r\nexport { default as ComboboxGroup } from \"./ComboboxGroup.vue\"\r\nexport { default as ComboboxInput } from \"./ComboboxInput.vue\"\r\nexport { default as ComboboxItem } from \"./ComboboxItem.vue\"\r\nexport { default as ComboboxList } from \"./ComboboxList.vue\"\r\nexport { default as ComboboxSeparator } from \"./ComboboxSeparator.vue\"\r\n\r\nexport { ComboboxCancel, ComboboxItemIndicator, ComboboxTrigger } from \"reka-ui\"\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
