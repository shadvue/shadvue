{
  "name": "pagination",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "ui/pagination/index.ts",
      "content": "export { default as Pagination } from \"./Pagination.vue\"\r\nexport { default as PaginationContent } from \"./PaginationContent.vue\"\r\nexport { default as PaginationEllipsis } from \"./PaginationEllipsis.vue\"\r\nexport { default as PaginationFirst } from \"./PaginationFirst.vue\"\r\nexport { default as PaginationItem } from \"./PaginationItem.vue\"\r\nexport { default as PaginationLast } from \"./PaginationLast.vue\"\r\nexport { default as PaginationNext } from \"./PaginationNext.vue\"\r\nexport { default as PaginationPrevious } from \"./PaginationPrevious.vue\"\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/pagination/Pagination.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PaginationRootEmits, PaginationRootProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { PaginationRoot, useForwardPropsEmits } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<PaginationRootProps & {\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\nconst emits = defineEmits<PaginationRootEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <PaginationRoot\r\n    v-slot=\"slotProps\"\r\n    data-slot=\"pagination\"\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn('mx-auto flex w-full justify-center', props.class)\"\r\n  >\r\n    <slot v-bind=\"slotProps\" />\r\n  </PaginationRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/pagination/PaginationContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PaginationListProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { PaginationList } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<PaginationListProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <PaginationList\r\n    v-slot=\"slotProps\"\r\n    data-slot=\"pagination-content\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('flex flex-row items-center gap-1', props.class)\"\r\n  >\r\n    <slot v-bind=\"slotProps\" />\r\n  </PaginationList>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/pagination/PaginationEllipsis.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PaginationEllipsisProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { MoreHorizontal } from \"lucide-vue-next\"\r\nimport { PaginationEllipsis } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<PaginationEllipsisProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <PaginationEllipsis\r\n    data-slot=\"pagination-ellipsis\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn('flex size-9 items-center justify-center', props.class)\"\r\n  >\r\n    <slot>\r\n      <MoreHorizontal class=\"size-4\" />\r\n      <span class=\"sr-only\">More pages</span>\r\n    </slot>\r\n  </PaginationEllipsis>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/pagination/PaginationFirst.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PaginationFirstProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport type { ButtonVariants } from \"@/registry/default/ui/button\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronLeftIcon } from \"lucide-vue-next\"\r\nimport { PaginationFirst, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/default/ui/button\"\r\n\r\nconst props = withDefaults(defineProps<PaginationFirstProps & {\r\n  size?: ButtonVariants[\"size\"]\r\n  class?: HTMLAttributes[\"class\"]\r\n}>(), {\r\n  size: \"default\",\r\n})\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\", \"size\")\r\nconst forwarded = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <PaginationFirst\r\n    data-slot=\"pagination-first\"\r\n    :class=\"cn(buttonVariants({ variant: 'ghost', size }), 'gap-1 px-2.5 sm:pr-2.5', props.class)\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <slot>\r\n      <ChevronLeftIcon />\r\n      <span class=\"hidden sm:block\">First</span>\r\n    </slot>\r\n  </PaginationFirst>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/pagination/PaginationItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PaginationListItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport type { ButtonVariants } from \"@/registry/default/ui/button\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { PaginationListItem } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/default/ui/button\"\r\n\r\nconst props = withDefaults(defineProps<PaginationListItemProps & {\r\n  size?: ButtonVariants[\"size\"]\r\n  class?: HTMLAttributes[\"class\"]\r\n  isActive?: boolean\r\n}>(), {\r\n  size: \"icon\",\r\n})\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\", \"size\", \"isActive\")\r\n</script>\r\n\r\n<template>\r\n  <PaginationListItem\r\n    data-slot=\"pagination-item\"\r\n    v-bind=\"delegatedProps\"\r\n    :class=\"cn(\r\n      buttonVariants({\r\n        variant: isActive ? 'outline' : 'ghost',\r\n        size,\r\n      }),\r\n      props.class)\"\r\n  >\r\n    <slot />\r\n  </PaginationListItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/pagination/PaginationLast.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PaginationLastProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport type { ButtonVariants } from \"@/registry/default/ui/button\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronRightIcon } from \"lucide-vue-next\"\r\nimport { PaginationLast, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/default/ui/button\"\r\n\r\nconst props = withDefaults(defineProps<PaginationLastProps & {\r\n  size?: ButtonVariants[\"size\"]\r\n  class?: HTMLAttributes[\"class\"]\r\n}>(), {\r\n  size: \"default\",\r\n})\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\", \"size\")\r\nconst forwarded = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <PaginationLast\r\n    data-slot=\"pagination-last\"\r\n    :class=\"cn(buttonVariants({ variant: 'ghost', size }), 'gap-1 px-2.5 sm:pr-2.5', props.class)\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <slot>\r\n      <span class=\"hidden sm:block\">Last</span>\r\n      <ChevronRightIcon />\r\n    </slot>\r\n  </PaginationLast>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/pagination/PaginationNext.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PaginationNextProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport type { ButtonVariants } from \"@/registry/default/ui/button\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronRightIcon } from \"lucide-vue-next\"\r\nimport { PaginationNext, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/default/ui/button\"\r\n\r\nconst props = withDefaults(defineProps<PaginationNextProps & {\r\n  size?: ButtonVariants[\"size\"]\r\n  class?: HTMLAttributes[\"class\"]\r\n}>(), {\r\n  size: \"default\",\r\n})\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\", \"size\")\r\nconst forwarded = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <PaginationNext\r\n    data-slot=\"pagination-next\"\r\n    :class=\"cn(buttonVariants({ variant: 'ghost', size }), 'gap-1 px-2.5 sm:pr-2.5', props.class)\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <slot>\r\n      <span class=\"hidden sm:block\">Next</span>\r\n      <ChevronRightIcon />\r\n    </slot>\r\n  </PaginationNext>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/pagination/PaginationPrevious.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { PaginationPrevProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport type { ButtonVariants } from \"@/registry/default/ui/button\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronLeftIcon } from \"lucide-vue-next\"\r\nimport { PaginationPrev, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/registry/default/ui/button\"\r\n\r\nconst props = withDefaults(defineProps<PaginationPrevProps & {\r\n  size?: ButtonVariants[\"size\"]\r\n  class?: HTMLAttributes[\"class\"]\r\n}>(), {\r\n  size: \"default\",\r\n})\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\", \"size\")\r\nconst forwarded = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <PaginationPrev\r\n    data-slot=\"pagination-previous\"\r\n    :class=\"cn(buttonVariants({ variant: 'ghost', size }), 'gap-1 px-2.5 sm:pr-2.5', props.class)\"\r\n    v-bind=\"forwarded\"\r\n  >\r\n    <slot>\r\n      <ChevronLeftIcon />\r\n      <span class=\"hidden sm:block\">Previous</span>\r\n    </slot>\r\n  </PaginationPrev>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
