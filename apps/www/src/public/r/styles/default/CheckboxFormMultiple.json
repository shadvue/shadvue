{
  "name": "CheckboxFormMultiple",
  "type": "registry:example",
  "dependencies": [
    "vee-validate",
    "@vee-validate/zod",
    "zod"
  ],
  "registryDependencies": [
    "button",
    "checkbox",
    "form",
    "toast"
  ],
  "files": [
    {
      "path": "examples/CheckboxFormMultiple.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { toTypedSchema } from \"@vee-validate/zod\"\r\nimport { useForm } from \"vee-validate\"\r\nimport { h } from \"vue\"\r\nimport * as z from \"zod\"\r\n\r\nimport { Button } from \"@/registry/default/ui/button\"\r\nimport { Checkbox } from \"@/registry/default/ui/checkbox\"\r\nimport {\r\n  FormControl,\r\n  FormDescription,\r\n  FormField,\r\n  FormItem,\r\n  FormLabel,\r\n  FormMessage,\r\n} from \"@/registry/default/ui/form\"\r\nimport { toast } from \"@/registry/default/ui/toast\"\r\n\r\nconst items = [\r\n  {\r\n    id: \"recents\",\r\n    label: \"Recents\",\r\n  },\r\n  {\r\n    id: \"home\",\r\n    label: \"Home\",\r\n  },\r\n  {\r\n    id: \"applications\",\r\n    label: \"Applications\",\r\n  },\r\n  {\r\n    id: \"desktop\",\r\n    label: \"Desktop\",\r\n  },\r\n  {\r\n    id: \"downloads\",\r\n    label: \"Downloads\",\r\n  },\r\n  {\r\n    id: \"documents\",\r\n    label: \"Documents\",\r\n  },\r\n] as const\r\n\r\nconst formSchema = toTypedSchema(z.object({\r\n  items: z.array(z.string()).refine(value => value.some(item => item), {\r\n    message: \"You have to select at least one item.\",\r\n  }),\r\n}))\r\n\r\nconst { handleSubmit } = useForm({\r\n  validationSchema: formSchema,\r\n  initialValues: {\r\n    items: [\"recents\", \"home\"],\r\n  },\r\n})\r\n\r\nconst onSubmit = handleSubmit((values) => {\r\n  toast({\r\n    title: \"You submitted the following values:\",\r\n    description: h(\"pre\", { class: \"mt-2 w-[340px] rounded-md bg-slate-950 p-4\" }, h(\"code\", { class: \"text-white\" }, JSON.stringify(values, null, 2))),\r\n  })\r\n})\r\n</script>\r\n\r\n<template>\r\n  <form @submit=\"onSubmit\">\r\n    <FormField name=\"items\">\r\n      <FormItem>\r\n        <div class=\"mb-4\">\r\n          <FormLabel class=\"text-base\">\r\n            Sidebar\r\n          </FormLabel>\r\n          <FormDescription>\r\n            Select the items you want to display in the sidebar.\r\n          </FormDescription>\r\n        </div>\r\n\r\n        <FormField v-for=\"item in items\" v-slot=\"{ value, handleChange }\" :key=\"item.id\" type=\"checkbox\" :value=\"item.id\" :unchecked-value=\"false\" name=\"items\">\r\n          <FormItem class=\"flex flex-row items-start space-x-3 space-y-0\">\r\n            <FormControl>\r\n              <Checkbox\r\n                :model-value=\"value.includes(item.id)\"\r\n                @update:model-value=\"handleChange\"\r\n              />\r\n            </FormControl>\r\n            <FormLabel class=\"font-normal\">\r\n              {{ item.label }}\r\n            </FormLabel>\r\n          </FormItem>\r\n        </FormField>\r\n        <FormMessage />\r\n      </FormItem>\r\n    </FormField>\r\n\r\n    <div class=\"flex justify-start mt-4\">\r\n      <Button type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  </form>\r\n</template>\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
