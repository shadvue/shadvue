{
  "name": "BarChartStacked",
  "type": "registry:example",
  "dependencies": [],
  "registryDependencies": [
    "chart-bar"
  ],
  "files": [
    {
      "path": "examples/BarChartStacked.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { BarChart } from \"@/registry/default/ui/chart-bar\"\r\n\r\nconst data = [\r\n  { name: \"Jan\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n  { name: \"Feb\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n  { name: \"Mar\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n  { name: \"Apr\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n  { name: \"May\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n  { name: \"Jun\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n  { name: \"Jul\", total: Math.floor(Math.random() * 2000) + 500, predicted: Math.floor(Math.random() * 2000) + 500 },\r\n]\r\n</script>\r\n\r\n<template>\r\n  <BarChart\r\n    index=\"name\"\r\n    :data=\"data\"\r\n    :categories=\"['total', 'predicted']\"\r\n    :y-formatter=\"(tick, i) => {\r\n      return typeof tick === 'number'\r\n        ? `$ ${new Intl.NumberFormat('us').format(tick).toString()}`\r\n        : ''\r\n    }\"\r\n    :type=\"'stacked'\"\r\n  />\r\n</template>\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
