{
  "name": "dropdown-menu",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui/dropdown-menu/DropdownMenu.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuRootEmits, DropdownMenuRootProps } from \"reka-ui\"\nimport { DropdownMenuRoot, useForwardPropsEmits } from \"reka-ui\"\r\n\r\nconst props = defineProps<DropdownMenuRootProps>()\r\nconst emits = defineEmits<DropdownMenuRootEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuRoot v-bind=\"forwarded\">\r\n    <slot />\r\n  </DropdownMenuRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuCheckboxItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuCheckboxItemEmits, DropdownMenuCheckboxItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { Check } from \"lucide-vue-next\"\nimport {\r\n  DropdownMenuCheckboxItem,\r\n\r\n  DropdownMenuItemIndicator,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<DropdownMenuCheckboxItemProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<DropdownMenuCheckboxItemEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuCheckboxItem\r\n    v-bind=\"forwarded\"\r\n    :class=\" cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <span class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuItemIndicator>\r\n        <Check class=\"w-4 h-4\" />\r\n      </DropdownMenuItemIndicator>\r\n    </span>\r\n    <slot />\r\n  </DropdownMenuCheckboxItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuContentEmits, DropdownMenuContentProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport {\r\n  DropdownMenuContent,\r\n\r\n  DropdownMenuPortal,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = withDefaults(\r\n  defineProps<DropdownMenuContentProps & { class?: HTMLAttributes[\"class\"] }>(),\r\n  {\r\n    sideOffset: 4,\r\n  },\r\n)\r\nconst emits = defineEmits<DropdownMenuContentEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuPortal>\r\n    <DropdownMenuContent\r\n      v-bind=\"forwarded\"\r\n      :class=\"cn('z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', props.class)\"\r\n    >\r\n      <slot />\r\n    </DropdownMenuContent>\r\n  </DropdownMenuPortal>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuGroupProps } from \"reka-ui\"\nimport { DropdownMenuGroup } from \"reka-ui\"\r\n\r\nconst props = defineProps<DropdownMenuGroupProps>()\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuGroup v-bind=\"props\">\r\n    <slot />\r\n  </DropdownMenuGroup>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { DropdownMenuItem, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<DropdownMenuItemProps & { class?: HTMLAttributes[\"class\"], inset?: boolean }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuItem\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm gap-2 px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0',\r\n      inset && 'pl-8',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n  </DropdownMenuItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuLabel.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuLabelProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport { DropdownMenuLabel, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<DropdownMenuLabelProps & { class?: HTMLAttributes[\"class\"], inset?: boolean }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuLabel\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn('px-2 py-1.5 text-sm font-semibold', inset && 'pl-8', props.class)\"\r\n  >\r\n    <slot />\r\n  </DropdownMenuLabel>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuRadioGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuRadioGroupEmits, DropdownMenuRadioGroupProps } from \"reka-ui\"\nimport {\r\n  DropdownMenuRadioGroup,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\n\r\nconst props = defineProps<DropdownMenuRadioGroupProps>()\r\nconst emits = defineEmits<DropdownMenuRadioGroupEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuRadioGroup v-bind=\"forwarded\">\r\n    <slot />\r\n  </DropdownMenuRadioGroup>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuRadioItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuRadioItemEmits, DropdownMenuRadioItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { Circle } from \"lucide-vue-next\"\nimport {\r\n  DropdownMenuItemIndicator,\r\n  DropdownMenuRadioItem,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<DropdownMenuRadioItemProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst emits = defineEmits<DropdownMenuRadioItemEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuRadioItem\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <span class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuItemIndicator>\r\n        <Circle class=\"h-2 w-2 fill-current\" />\r\n      </DropdownMenuItemIndicator>\r\n    </span>\r\n    <slot />\r\n  </DropdownMenuRadioItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuSeparator.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuSeparatorProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport {\r\n  DropdownMenuSeparator,\r\n\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<DropdownMenuSeparatorProps & {\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuSeparator v-bind=\"delegatedProps\" :class=\"cn('-mx-1 my-1 h-px bg-muted', props.class)\" />\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuShortcut.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <span :class=\"cn('ml-auto text-xs tracking-widest opacity-60', props.class)\">\r\n    <slot />\r\n  </span>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuSub.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuSubEmits, DropdownMenuSubProps } from \"reka-ui\"\nimport {\r\n  DropdownMenuSub,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\n\r\nconst props = defineProps<DropdownMenuSubProps>()\r\nconst emits = defineEmits<DropdownMenuSubEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuSub v-bind=\"forwarded\">\r\n    <slot />\r\n  </DropdownMenuSub>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuSubContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuSubContentEmits, DropdownMenuSubContentProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\nimport {\r\n  DropdownMenuSubContent,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<DropdownMenuSubContentProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<DropdownMenuSubContentEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuSubContent\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn('z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2', props.class)\"\r\n  >\r\n    <slot />\r\n  </DropdownMenuSubContent>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuSubTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuSubTriggerProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronRight } from \"lucide-vue-next\"\nimport {\r\n  DropdownMenuSubTrigger,\r\n\r\n  useForwardProps,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<DropdownMenuSubTriggerProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuSubTrigger\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn(\r\n      'flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n    <ChevronRight class=\"ml-auto h-4 w-4\" />\r\n  </DropdownMenuSubTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/DropdownMenuTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { DropdownMenuTriggerProps } from \"reka-ui\"\nimport { DropdownMenuTrigger, useForwardProps } from \"reka-ui\"\r\n\r\nconst props = defineProps<DropdownMenuTriggerProps>()\r\n\r\nconst forwardedProps = useForwardProps(props)\r\n</script>\r\n\r\n<template>\r\n  <DropdownMenuTrigger class=\"outline-none\" v-bind=\"forwardedProps\">\r\n    <slot />\r\n  </DropdownMenuTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/dropdown-menu/index.ts",
      "content": "export { default as DropdownMenu } from \"./DropdownMenu.vue\"\r\n\r\nexport { default as DropdownMenuCheckboxItem } from \"./DropdownMenuCheckboxItem.vue\"\r\nexport { default as DropdownMenuContent } from \"./DropdownMenuContent.vue\"\r\nexport { default as DropdownMenuGroup } from \"./DropdownMenuGroup.vue\"\r\nexport { default as DropdownMenuItem } from \"./DropdownMenuItem.vue\"\r\nexport { default as DropdownMenuLabel } from \"./DropdownMenuLabel.vue\"\r\nexport { default as DropdownMenuRadioGroup } from \"./DropdownMenuRadioGroup.vue\"\r\nexport { default as DropdownMenuRadioItem } from \"./DropdownMenuRadioItem.vue\"\r\nexport { default as DropdownMenuSeparator } from \"./DropdownMenuSeparator.vue\"\r\nexport { default as DropdownMenuShortcut } from \"./DropdownMenuShortcut.vue\"\r\nexport { default as DropdownMenuSub } from \"./DropdownMenuSub.vue\"\r\nexport { default as DropdownMenuSubContent } from \"./DropdownMenuSubContent.vue\"\r\nexport { default as DropdownMenuSubTrigger } from \"./DropdownMenuSubTrigger.vue\"\r\nexport { default as DropdownMenuTrigger } from \"./DropdownMenuTrigger.vue\"\r\nexport { DropdownMenuPortal } from \"reka-ui\"\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
