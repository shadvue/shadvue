{
  "name": "ComboboxPopover",
  "type": "registry:example",
  "dependencies": [],
  "registryDependencies": [
    "button",
    "command",
    "popover"
  ],
  "files": [
    {
      "path": "examples/ComboboxPopover.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { Component } from \"vue\"\r\nimport {\r\n  ArrowUpCircle,\r\n  CheckCircle2,\r\n  Circle,\r\n  HelpCircle,\r\n  XCircle,\r\n} from \"lucide-vue-next\"\r\nimport { ref } from \"vue\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/registry/default/ui/button\"\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n} from \"@/registry/default/ui/command\"\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/registry/default/ui/popover\"\r\n\r\ninterface Status {\r\n  value: string\r\n  label: string\r\n  icon: Component\r\n}\r\n\r\nconst statuses: Status[] = [\r\n  {\r\n    value: \"backlog\",\r\n    label: \"Backlog\",\r\n    icon: HelpCircle,\r\n  },\r\n  {\r\n    value: \"todo\",\r\n    label: \"Todo\",\r\n    icon: Circle,\r\n  },\r\n  {\r\n    value: \"in progress\",\r\n    label: \"In Progress\",\r\n    icon: ArrowUpCircle,\r\n  },\r\n  {\r\n    value: \"done\",\r\n    label: \"Done\",\r\n    icon: CheckCircle2,\r\n  },\r\n  {\r\n    value: \"canceled\",\r\n    label: \"Canceled\",\r\n    icon: XCircle,\r\n  },\r\n]\r\n\r\nconst open = ref(false)\r\n// const value = ref<typeof statuses[number]>()\r\n\r\nconst selectedStatus = ref<Status>()\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex items-center space-x-4\">\r\n    <p class=\"text-sm text-muted-foreground\">\r\n      Status\r\n    </p>\r\n    <Popover v-model:open=\"open\">\r\n      <PopoverTrigger as-child>\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          class=\"w-[150px] justify-start\"\r\n        >\r\n          <template v-if=\"selectedStatus\">\r\n            <component :is=\"selectedStatus?.icon\" class=\"mr-2 h-4 w-4 shrink-0\" />\r\n            {{ selectedStatus?.label }}\r\n          </template>\r\n          <template v-else>\r\n            + Set status\r\n          </template>\r\n        </Button>\r\n      </PopoverTrigger>\r\n      <PopoverContent class=\"p-0\" side=\"right\" align=\"start\">\r\n        <Command>\r\n          <CommandInput placeholder=\"Change status...\" />\r\n          <CommandList>\r\n            <CommandEmpty>No results found.</CommandEmpty>\r\n            <CommandGroup>\r\n              <CommandItem\r\n                v-for=\"status in statuses\"\r\n                :key=\"status.value\"\r\n                :value=\"status.value\"\r\n                @select=\"(value) => {\r\n                  selectedStatus = status\r\n                  open = false\r\n                }\"\r\n              >\r\n                <component\r\n                  :is=\"status.icon\"\r\n                  :key=\"status.value\"\r\n                  :class=\"cn('mr-2 h-4 w-4', status.value === selectedStatus?.value ? 'opacity-100' : 'opacity-40',\r\n                  )\"\r\n                />\r\n                <span>{{ status.label }}</span>\r\n              </CommandItem>\r\n            </CommandGroup>\r\n          </CommandList>\r\n        </Command>\r\n      </PopoverContent>\r\n    </Popover>\r\n  </div>\r\n</template>\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
