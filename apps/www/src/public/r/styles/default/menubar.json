{
  "name": "menubar",
  "type": "registry:ui",
  "dependencies": [
    "reka-ui",
    "@vueuse/core"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui/menubar/index.ts",
      "content": "export { default as Menubar } from \"./Menubar.vue\"\r\nexport { default as MenubarCheckboxItem } from \"./MenubarCheckboxItem.vue\"\r\nexport { default as MenubarContent } from \"./MenubarContent.vue\"\r\nexport { default as MenubarGroup } from \"./MenubarGroup.vue\"\r\nexport { default as MenubarItem } from \"./MenubarItem.vue\"\r\nexport { default as MenubarLabel } from \"./MenubarLabel.vue\"\r\nexport { default as MenubarMenu } from \"./MenubarMenu.vue\"\r\nexport { default as MenubarRadioGroup } from \"./MenubarRadioGroup.vue\"\r\nexport { default as MenubarRadioItem } from \"./MenubarRadioItem.vue\"\r\nexport { default as MenubarSeparator } from \"./MenubarSeparator.vue\"\r\nexport { default as MenubarShortcut } from \"./MenubarShortcut.vue\"\r\nexport { default as MenubarSub } from \"./MenubarSub.vue\"\r\nexport { default as MenubarSubContent } from \"./MenubarSubContent.vue\"\r\nexport { default as MenubarSubTrigger } from \"./MenubarSubTrigger.vue\"\r\nexport { default as MenubarTrigger } from \"./MenubarTrigger.vue\"\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/Menubar.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarRootEmits, MenubarRootProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport {\r\n  MenubarRoot,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<MenubarRootProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<MenubarRootEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <MenubarRoot\r\n    v-bind=\"forwarded\"\r\n    :class=\"\r\n      cn(\r\n        'flex h-10 items-center gap-x-1 rounded-md border bg-background p-1',\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <slot />\r\n  </MenubarRoot>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarCheckboxItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarCheckboxItemEmits, MenubarCheckboxItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { Check } from \"lucide-vue-next\"\r\nimport {\r\n  MenubarCheckboxItem,\r\n\r\n  MenubarItemIndicator,\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<MenubarCheckboxItemProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<MenubarCheckboxItemEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <MenubarCheckboxItem\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <span class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <MenubarItemIndicator>\r\n        <Check class=\"w-4 h-4\" />\r\n      </MenubarItemIndicator>\r\n    </span>\r\n    <slot />\r\n  </MenubarCheckboxItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarContentProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport {\r\n  MenubarContent,\r\n\r\n  MenubarPortal,\r\n  useForwardProps,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = withDefaults(\r\n  defineProps<MenubarContentProps & { class?: HTMLAttributes[\"class\"] }>(),\r\n  {\r\n    align: \"start\",\r\n    alignOffset: -4,\r\n    sideOffset: 8,\r\n  },\r\n)\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <MenubarPortal>\r\n    <MenubarContent\r\n      v-bind=\"forwardedProps\"\r\n      :class=\"\r\n        cn(\r\n          'z-50 min-w-48 overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n          props.class,\r\n        )\r\n      \"\r\n    >\r\n      <slot />\r\n    </MenubarContent>\r\n  </MenubarPortal>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarGroupProps } from \"reka-ui\"\r\nimport { MenubarGroup } from \"reka-ui\"\r\n\r\nconst props = defineProps<MenubarGroupProps>()\r\n</script>\r\n\r\n<template>\r\n  <MenubarGroup v-bind=\"props\">\r\n    <slot />\r\n  </MenubarGroup>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarItemEmits, MenubarItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport {\r\n  MenubarItem,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<MenubarItemProps & { class?: HTMLAttributes[\"class\"], inset?: boolean }>()\r\n\r\nconst emits = defineEmits<MenubarItemEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <MenubarItem\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      inset && 'pl-8',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n  </MenubarItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarLabel.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarLabelProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { MenubarLabel } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<MenubarLabelProps & { class?: HTMLAttributes[\"class\"], inset?: boolean }>()\r\n</script>\r\n\r\n<template>\r\n  <MenubarLabel :class=\"cn('px-2 py-1.5 text-sm font-semibold', inset && 'pl-8', props.class)\">\r\n    <slot />\r\n  </MenubarLabel>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarMenu.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarMenuProps } from \"reka-ui\"\r\nimport { MenubarMenu } from \"reka-ui\"\r\n\r\nconst props = defineProps<MenubarMenuProps>()\r\n</script>\r\n\r\n<template>\r\n  <MenubarMenu v-bind=\"props\">\r\n    <slot />\r\n  </MenubarMenu>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarRadioGroup.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarRadioGroupEmits, MenubarRadioGroupProps } from \"reka-ui\"\r\nimport {\r\n  MenubarRadioGroup,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\n\r\nconst props = defineProps<MenubarRadioGroupProps>()\r\n\r\nconst emits = defineEmits<MenubarRadioGroupEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <MenubarRadioGroup v-bind=\"forwarded\">\r\n    <slot />\r\n  </MenubarRadioGroup>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarRadioItem.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarRadioItemEmits, MenubarRadioItemProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { Circle } from \"lucide-vue-next\"\r\nimport {\r\n  MenubarItemIndicator,\r\n  MenubarRadioItem,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<MenubarRadioItemProps & { class?: HTMLAttributes[\"class\"] }>()\r\nconst emits = defineEmits<MenubarRadioItemEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <MenubarRadioItem\r\n    v-bind=\"forwarded\"\r\n    :class=\"cn(\r\n      'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <span class=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <MenubarItemIndicator>\r\n        <Circle class=\"h-2 w-2 fill-current\" />\r\n      </MenubarItemIndicator>\r\n    </span>\r\n    <slot />\r\n  </MenubarRadioItem>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarSeparator.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarSeparatorProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { MenubarSeparator, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<MenubarSeparatorProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <MenubarSeparator :class=\" cn('-mx-1 my-1 h-px bg-muted', props.class)\" v-bind=\"forwardedProps\" />\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarShortcut.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<{\r\n  class?: HTMLAttributes[\"class\"]\r\n}>()\r\n</script>\r\n\r\n<template>\r\n  <span :class=\"cn('ml-auto text-xs tracking-widest text-muted-foreground', props.class)\">\r\n    <slot />\r\n  </span>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarSub.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarSubEmits } from \"reka-ui\"\r\nimport { MenubarSub, useForwardPropsEmits } from \"reka-ui\"\r\n\r\ninterface MenubarSubRootProps {\r\n  defaultOpen?: boolean\r\n  open?: boolean\r\n}\r\n\r\nconst props = defineProps<MenubarSubRootProps>()\r\nconst emits = defineEmits<MenubarSubEmits>()\r\n\r\nconst forwarded = useForwardPropsEmits(props, emits)\r\n</script>\r\n\r\n<template>\r\n  <MenubarSub v-bind=\"forwarded\">\r\n    <slot />\r\n  </MenubarSub>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarSubContent.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarSubContentEmits, MenubarSubContentProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport {\r\n  MenubarPortal,\r\n  MenubarSubContent,\r\n\r\n  useForwardPropsEmits,\r\n} from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<MenubarSubContentProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst emits = defineEmits<MenubarSubContentEmits>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits)\r\n</script>\r\n\r\n<template>\r\n  <MenubarPortal>\r\n    <MenubarSubContent\r\n      v-bind=\"forwarded\"\r\n      :class=\"\r\n        cn(\r\n          'z-50 min-w-32 overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\r\n          props.class,\r\n        )\r\n      \"\r\n    >\r\n      <slot />\r\n    </MenubarSubContent>\r\n  </MenubarPortal>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarSubTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarSubTriggerProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { ChevronRight } from \"lucide-vue-next\"\r\nimport { MenubarSubTrigger, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<MenubarSubTriggerProps & { class?: HTMLAttributes[\"class\"], inset?: boolean }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <MenubarSubTrigger\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"cn(\r\n      'flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\r\n      inset && 'pl-8',\r\n      props.class,\r\n    )\"\r\n  >\r\n    <slot />\r\n    <ChevronRight class=\"ml-auto h-4 w-4\" />\r\n  </MenubarSubTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "ui/menubar/MenubarTrigger.vue",
      "content": "<script setup lang=\"ts\">\r\nimport type { MenubarTriggerProps } from \"reka-ui\"\r\nimport type { HTMLAttributes } from \"vue\"\r\nimport { reactiveOmit } from \"@vueuse/core\"\r\nimport { MenubarTrigger, useForwardProps } from \"reka-ui\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst props = defineProps<MenubarTriggerProps & { class?: HTMLAttributes[\"class\"] }>()\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\")\r\n\r\nconst forwardedProps = useForwardProps(delegatedProps)\r\n</script>\r\n\r\n<template>\r\n  <MenubarTrigger\r\n    v-bind=\"forwardedProps\"\r\n    :class=\"\r\n      cn(\r\n        'flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground',\r\n        props.class,\r\n      )\r\n    \"\r\n  >\r\n    <slot />\r\n  </MenubarTrigger>\r\n</template>\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}
