{
  "name": "CommandDropdownMenu",
  "type": "registry:example",
  "dependencies": [],
  "registryDependencies": [
    "button",
    "command",
    "dropdown-menu"
  ],
  "files": [
    {
      "path": "examples/CommandDropdownMenu.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { MoreHorizontal } from \"lucide-vue-next\"\r\nimport { ref } from \"vue\"\r\n\r\nimport { Button } from \"@/registry/default/ui/button\"\r\nimport {\r\n  Command,\r\n  CommandEmpty,\r\n  CommandGroup,\r\n  CommandInput,\r\n  CommandItem,\r\n  CommandList,\r\n} from \"@/registry/default/ui/command\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuGroup,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuTrigger,\r\n} from \"@/registry/default/ui/dropdown-menu\"\r\n\r\nconst labels = [\r\n  \"feature\",\r\n  \"bug\",\r\n  \"enhancement\",\r\n  \"documentation\",\r\n  \"design\",\r\n  \"question\",\r\n  \"maintenance\",\r\n]\r\n\r\nconst labelRef = ref(\"feature\")\r\nconst open = ref(false)\r\n</script>\r\n\r\n<template>\r\n  <div class=\"flex w-full flex-col items-start justify-between rounded-md border px-4 py-3 sm:flex-row sm:items-center\">\r\n    <p class=\"text-sm font-medium leading-none\">\r\n      <span class=\"mr-2 rounded-lg bg-primary px-2 py-1 text-xs text-primary-foreground\">\r\n        {{ labelRef }}\r\n      </span>\r\n      <span class=\"text-muted-foreground\">Create a new project</span>\r\n    </p>\r\n    <DropdownMenu v-model:open=\"open\">\r\n      <DropdownMenuTrigger as-child>\r\n        <Button variant=\"ghost\" size=\"sm\">\r\n          <MoreHorizontal />\r\n        </Button>\r\n      </DropdownMenuTrigger>\r\n      <DropdownMenuContent align=\"end\" class=\"w-[200px]\">\r\n        <DropdownMenuLabel>Actions</DropdownMenuLabel>\r\n        <DropdownMenuGroup>\r\n          <DropdownMenuItem>\r\n            Assign to...\r\n          </DropdownMenuItem>\r\n          <DropdownMenuItem>\r\n            Set due date...\r\n          </DropdownMenuItem>\r\n          <DropdownMenuSeparator />\r\n          <DropdownMenuSub>\r\n            <DropdownMenuSubTrigger>\r\n              Apply label\r\n            </DropdownMenuSubTrigger>\r\n            <DropdownMenuSubContent class=\"p-0\">\r\n              <Command>\r\n                <CommandInput\r\n                  placeholder=\"Filter label...\"\r\n                  auto-focus\r\n                />\r\n                <CommandList>\r\n                  <CommandEmpty>No label found.</CommandEmpty>\r\n                  <CommandGroup>\r\n                    <CommandItem\r\n                      v-for=\"label in labels\"\r\n                      :key=\"label\"\r\n                      :value=\"label\"\r\n                      @select=\"(ev) => {\r\n                        labelRef = ev.detail.value as string\r\n                        open = false\r\n                      }\"\r\n                    >\r\n                      {{ label }}\r\n                    </CommandItem>\r\n                  </CommandGroup>\r\n                </CommandList>\r\n              </Command>\r\n            </DropdownMenuSubContent>\r\n          </DropdownMenuSub>\r\n          <DropdownMenuSeparator />\r\n          <DropdownMenuItem class=\"text-red-600\">\r\n            Delete\r\n            <DropdownMenuShortcut>⌘⌫</DropdownMenuShortcut>\r\n          </DropdownMenuItem>\r\n        </DropdownMenuGroup>\r\n      </DropdownMenuContent>\r\n    </DropdownMenu>\r\n  </div>\r\n</template>\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
