{
  "name": "AutoFormBasic",
  "type": "registry:example",
  "dependencies": [],
  "registryDependencies": [
    "auto-form",
    "button",
    "toast"
  ],
  "files": [
    {
      "path": "examples/AutoFormBasic.vue",
      "content": "<script setup lang=\"ts\">\r\nimport { h } from \"vue\"\r\nimport * as z from \"zod\"\r\nimport { AutoForm, AutoFormField } from \"@/registry/default/ui/auto-form\"\r\nimport { Button } from \"@/registry/default/ui/button\"\r\nimport { toast } from \"@/registry/default/ui/toast\"\r\n\r\nenum Sports {\r\n  Football = \"Football/Soccer\",\r\n  Basketball = \"Basketball\",\r\n  Baseball = \"Baseball\",\r\n  Hockey = \"Hockey (Ice)\",\r\n  None = \"I don't like sports\",\r\n}\r\n\r\nconst schema = z.object({\r\n  username: z\r\n    .string({\r\n      required_error: \"Username is required.\",\r\n    })\r\n    .min(2, {\r\n      message: \"Username must be at least 2 characters.\",\r\n    }),\r\n\r\n  password: z\r\n    .string({\r\n      required_error: \"Password is required.\",\r\n    })\r\n    .min(8, {\r\n      message: \"Password must be at least 8 characters.\",\r\n    }),\r\n\r\n  favouriteNumber: z.coerce\r\n    .number({\r\n      invalid_type_error: \"Favourite number must be a number.\",\r\n    })\r\n    .min(1, {\r\n      message: \"Favourite number must be at least 1.\",\r\n    })\r\n    .max(10, {\r\n      message: \"Favourite number must be at most 10.\",\r\n    })\r\n    .default(1)\r\n    .optional(),\r\n\r\n  acceptTerms: z\r\n    .boolean()\r\n    .refine(value => value, {\r\n      message: \"You must accept the terms and conditions.\",\r\n      path: [\"acceptTerms\"],\r\n    }),\r\n\r\n  sendMeMails: z.boolean().optional(),\r\n\r\n  birthday: z.coerce.date().optional(),\r\n\r\n  color: z.enum([\"red\", \"green\", \"blue\"]).optional(),\r\n\r\n  // Another enum example\r\n  marshmallows: z\r\n    .enum([\"not many\", \"a few\", \"a lot\", \"too many\"]),\r\n\r\n  // Native enum example\r\n  sports: z.nativeEnum(Sports).describe(\"What is your favourite sport?\"),\r\n\r\n  bio: z\r\n    .string()\r\n    .min(10, {\r\n      message: \"Bio must be at least 10 characters.\",\r\n    })\r\n    .max(160, {\r\n      message: \"Bio must not be longer than 30 characters.\",\r\n    })\r\n    .optional(),\r\n\r\n  customParent: z.string().optional(),\r\n\r\n  file: z.string().optional(),\r\n})\r\n\r\nfunction onSubmit(values: Record<string, any>) {\r\n  toast({\r\n    title: \"You submitted the following values:\",\r\n    description: h(\"pre\", { class: \"mt-2 w-[340px] rounded-md bg-slate-950 p-4\" }, h(\"code\", { class: \"text-white\" }, JSON.stringify(values, null, 2))),\r\n  })\r\n}\r\n</script>\r\n\r\n<template>\r\n  <AutoForm\r\n    class=\"w-2/3 space-y-6\"\r\n    :schema=\"schema\"\r\n    :field-config=\"{\r\n      password: {\r\n        label: 'Your secure password',\r\n        inputProps: {\r\n          type: 'password',\r\n          placeholder: '••••••••',\r\n        },\r\n      },\r\n      favouriteNumber: {\r\n        description: 'Your favourite number between 1 and 10.',\r\n      },\r\n      acceptTerms: {\r\n        label: 'Accept terms and conditions.',\r\n        inputProps: {\r\n          required: true,\r\n        },\r\n      },\r\n\r\n      birthday: {\r\n        description: 'We need your birthday to send you a gift.',\r\n      },\r\n\r\n      sendMeMails: {\r\n        component: 'switch',\r\n      },\r\n\r\n      bio: {\r\n        component: 'textarea',\r\n      },\r\n\r\n      marshmallows: {\r\n        label: 'How many marshmallows fit in your mouth?',\r\n        component: 'radio',\r\n      },\r\n\r\n      file: {\r\n        label: 'Text file',\r\n        component: 'file',\r\n      },\r\n    }\"\r\n    @submit=\"onSubmit\"\r\n  >\r\n    <template #acceptTerms=\"slotProps\">\r\n      <AutoFormField v-bind=\"slotProps\" />\r\n      <div class=\"!mt-2 text-sm\">\r\n        I agree to the <button class=\"text-primary underline\">\r\n          terms and conditions\r\n        </button>.\r\n      </div>\r\n    </template>\r\n\r\n    <template #customParent=\"slotProps\">\r\n      <div class=\"flex items-end space-x-2\">\r\n        <AutoFormField v-bind=\"slotProps\" class=\"w-full\" />\r\n        <Button type=\"button\">\r\n          Check\r\n        </Button>\r\n      </div>\r\n    </template>\r\n\r\n    <Button type=\"submit\">\r\n      Submit\r\n    </Button>\r\n  </AutoForm>\r\n</template>\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
