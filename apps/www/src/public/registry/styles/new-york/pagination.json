{
  "name": "pagination",
  "dependencies": [],
  "registryDependencies": [
    "utils",
    "button"
  ],
  "files": [
    {
      "name": "PaginationEllipsis.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PaginationEllipsisProps } from 'radix-vue'\nimport type { HTMLAttributes } from 'vue'\nimport { cn } from '@/lib/utils'\nimport { DotsHorizontalIcon } from '@radix-icons/vue'\nimport { PaginationEllipsis } from 'radix-vue'\nimport { computed } from 'vue'\n\nconst props = defineProps<PaginationEllipsisProps & { class?: HTMLAttributes['class'] }>()\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n</script>\n\n<template>\n  <PaginationEllipsis v-bind=\"delegatedProps\" :class=\"cn('w-9 h-9 flex items-center justify-center', props.class)\">\n    <slot>\n      <DotsHorizontalIcon />\n    </slot>\n  </PaginationEllipsis>\n</template>\n"
    },
    {
      "name": "PaginationFirst.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PaginationFirstProps } from 'radix-vue'\nimport type { HTMLAttributes } from 'vue'\nimport {\n  Button,\n} from '@/lib/registry/new-york/ui/button'\nimport { cn } from '@/lib/utils'\nimport { DoubleArrowLeftIcon } from '@radix-icons/vue'\nimport { PaginationFirst } from 'radix-vue'\nimport { computed } from 'vue'\n\nconst props = withDefaults(defineProps<PaginationFirstProps & { class?: HTMLAttributes['class'] }>(), {\n  asChild: true,\n})\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n</script>\n\n<template>\n  <PaginationFirst v-bind=\"delegatedProps\">\n    <Button :class=\"cn('w-9 h-9 p-0', props.class)\" variant=\"outline\">\n      <slot>\n        <DoubleArrowLeftIcon />\n      </slot>\n    </Button>\n  </PaginationFirst>\n</template>\n"
    },
    {
      "name": "PaginationLast.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PaginationLastProps } from 'radix-vue'\nimport type { HTMLAttributes } from 'vue'\nimport {\n  Button,\n} from '@/lib/registry/new-york/ui/button'\nimport { cn } from '@/lib/utils'\nimport { DoubleArrowRightIcon } from '@radix-icons/vue'\nimport { PaginationLast } from 'radix-vue'\nimport { computed } from 'vue'\n\nconst props = withDefaults(defineProps<PaginationLastProps & { class?: HTMLAttributes['class'] }>(), {\n  asChild: true,\n})\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n</script>\n\n<template>\n  <PaginationLast v-bind=\"delegatedProps\">\n    <Button :class=\"cn('w-9 h-9 p-0', props.class)\" variant=\"outline\">\n      <slot>\n        <DoubleArrowRightIcon />\n      </slot>\n    </Button>\n  </PaginationLast>\n</template>\n"
    },
    {
      "name": "PaginationNext.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PaginationNextProps } from 'radix-vue'\nimport type { HTMLAttributes } from 'vue'\nimport {\n  Button,\n} from '@/lib/registry/new-york/ui/button'\nimport { cn } from '@/lib/utils'\nimport { ChevronRightIcon } from '@radix-icons/vue'\nimport { PaginationNext } from 'radix-vue'\nimport { computed } from 'vue'\n\nconst props = withDefaults(defineProps<PaginationNextProps & { class?: HTMLAttributes['class'] }>(), {\n  asChild: true,\n})\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n</script>\n\n<template>\n  <PaginationNext v-bind=\"delegatedProps\">\n    <Button :class=\"cn('w-9 h-9 p-0', props.class)\" variant=\"outline\">\n      <slot>\n        <ChevronRightIcon />\n      </slot>\n    </Button>\n  </PaginationNext>\n</template>\n"
    },
    {
      "name": "PaginationPrev.vue",
      "content": "<script setup lang=\"ts\">\nimport type { PaginationPrevProps } from 'radix-vue'\nimport type { HTMLAttributes } from 'vue'\nimport {\n  Button,\n} from '@/lib/registry/new-york/ui/button'\nimport { cn } from '@/lib/utils'\nimport { ChevronLeftIcon } from '@radix-icons/vue'\nimport { PaginationPrev } from 'radix-vue'\nimport { computed } from 'vue'\n\nconst props = withDefaults(defineProps<PaginationPrevProps & { class?: HTMLAttributes['class'] }>(), {\n  asChild: true,\n})\n\nconst delegatedProps = computed(() => {\n  const { class: _, ...delegated } = props\n\n  return delegated\n})\n</script>\n\n<template>\n  <PaginationPrev v-bind=\"delegatedProps\">\n    <Button :class=\"cn('w-9 h-9 p-0', props.class)\" variant=\"outline\">\n      <slot>\n        <ChevronLeftIcon />\n      </slot>\n    </Button>\n  </PaginationPrev>\n</template>\n"
    },
    {
      "name": "index.ts",
      "content": "export { default as PaginationEllipsis } from './PaginationEllipsis.vue'\nexport { default as PaginationFirst } from './PaginationFirst.vue'\nexport { default as PaginationLast } from './PaginationLast.vue'\nexport { default as PaginationNext } from './PaginationNext.vue'\nexport { default as PaginationPrev } from './PaginationPrev.vue'\nexport {\n  PaginationRoot as Pagination,\n  PaginationList,\n  PaginationListItem,\n} from 'radix-vue'\n"
    }
  ],
  "type": "components:ui"
}
